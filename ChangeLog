Date:   01/12/2007 15:38
Auteur: fpottier

Ajouté [RawPrinter], [CodeSharing]. On partage ici le code des états dont
les tables de transitions sont identiques. C'est un gros hack. J'observe
un gain d'environ 12% dans le cas du petit compilo (parser.o descend de
120K à 105K). J'espère ne pas avoir introduit de bugs.

Date:   20/05/2007 18:34
Auteur: fpottier

Quelques ajustements à nos Makefile bordéliques. Je vais faire une release.

Date:   20/05/2007 14:06
Auteur: fpottier

Supprimé (j'espère) le bug signalé par Ketti (ketti.mly). Mon implémentation
de Pager était fausse: lorsqu'on fusionne un nouvel état dans un état
existant, il faut immédiatement mettre à jour les descendants existants, et
non pas se contenter de programmer cela pour plus tard. Sinon, on risque de
prendre ensuite de nouvelles décisions de fusion incompatibles avec celle que
l'on vient de prendre. Le fix est dans [lr1.ml].

Date:   11/05/2007 13:29
Auteur: fpottier

Ajouté la démo calc-param.

Date:   11/05/2007 10:06
Auteur: fpottier

Légèrement modifié la démo calc-two pour factoriser une définition
commune aux deux grammaires.

Date:   24/03/2007 10:58
Auteur: fpottier

Petit changement à [LineCount], supposé l'accélérer en lisant ligne à
ligne plutôt que caractère à caractère.

Date:   22/03/2007 10:39
Auteur: fpottier

Simplifié les Makefile. Correction pour vérifier dans tous les cas que
PREFIX est bien réglé. Par ailleurs, le bootstrap devient plus difficile
à contourner et est disponible à la fois avec ocamlc et ocamlopt.

Date:   15/02/2007 09:49
Auteur: fpottier

Supprimé l'emploi de which dans les Makefile, pour plus de portabilité.

Date:   22/10/2006 16:07
Auteur: fpottier

Modifié le lexer pour interdire partout les mots-clef ocaml.

Date:   06/09/2006 10:16
Auteur: fpottier

Mise à jour de [GMap], [GSet] et [Patricia] pour resynchroniser avec
alphaLib.

Date:   26/06/2006 11:40
Auteur: regisgia

Ne génère de nouveaux noms frais pour les producteurs seulement si ils
sont utilisés dans l'action sémantique.

Date:   26/06/2006 10:56
Auteur: regisgia

Entoure les actions sémantiques de parenthèses lors des compositions 
d'actions induites par l'inlining.

Date:   25/06/2006 22:22
Auteur: fpottier

Ajouté la construction du graphe des conflits dans [ConflictGraph], débranché
pour l'instant. (À insérer dans Makefile.common avant [Conflict].)

Date:   23/06/2006 18:39
Auteur: regisgia

Deplace Code.*prefix vers CodeBits.
Utilise CodeBits.prefix pour l'inlining des positions.

Date:   23/06/2006 18:34
Auteur: fpottier

Ajouté quelques entrées dans sample-grammars.

Date:   23/06/2006 18:14
Auteur: regisgia

Corrige le bug introduit par le patch sur l'inlining des positions.

Date:   23/06/2006 18:12
Auteur: fpottier

Inventé une restriction à l'algorithme de Pager qui pourrait faciliter
l'explication des conflits.

Date:   20/06/2006 16:37
Auteur: regisgia

Nouvel item TODO.

Date:   20/06/2006 16:28
Auteur: regisgia

Ajuste un fichier de test.

Date:   20/06/2006 15:54
Auteur: regisgia

Fin de la correction du bug. 
Utilisation de nom frais lorsqu'on inline des productions manquant
de nom.

Date:   16/06/2006 10:58
Auteur: regisgia

Correction du bug des positions incorrectes après inlining.

Date:   15/06/2006 09:19
Auteur: fpottier

Correction dans [Lexdep] et ajout du flag [--raw-depend].

Date:   12/06/2006 15:00
Auteur: regisgia

Corrigé le bug lié au %type sur des terminaux.

Date:   12/06/2006 14:32
Auteur: regisgia

Corrigé le bug signalé par Julia Lawall : les $i sont interdits dans
les règles %inline.

Date:   12/06/2006 10:47
Auteur: fpottier

Revu la gestion de la détection des niveaux de priorité inutiles pour
les terminaux. Elle inclut maintenant les terminaux et pseudo-terminaux.
Corrigé au passage un bug signalé par Julia Lawall. Corrigé également
un bug dans l'afficheur de grammaires: ne pas afficher de déclaration
%token pour les pseudo-terminaux.

Date:   01/06/2006 11:03
Auteur: fpottier

Ajouté un flag non documenté [--no-pager] pour débrancher l'algorithme
de Pager. Inclus un meilleur message d'erreur interne lorsqu'on découvre
un problème avec Pager dans [lr1partial].

Date:   16/05/2006 16:07
Auteur: fpottier

Ajouté la page de man écrite par Samuel Mimram. Modifié le script
[go] pour ne plus tagger, c'est trop lent.

Tag:    EOSPAGER
Date:   05/05/2006
Auteur: fpottier

Re-modifié le critère de Pager pour tenir compte des conflits
end-of-stream. Ma précédente modification n'était pas stable.
Celle-ci l'est, j'espère. En tout cas, ça élimine le bug de
Sébastien.

Tag:    EOS
Date:   05/05/2006
Auteur: fpottier

Corrigé un problème qui faisait que certains conflits EOS n'étaient
pas signalés. Modifié le critère de Pager (!) pour ne pas créer de
conflits end-of-stream. Je ne suis pas certain que ma modif soit
bonne, et d'ailleurs elle ne suffit pas à supprimer le problème
avec la grammaire de Sébastien Hinderer. À suivre.

Tag:    REMTODOAUTO
Date:   05/05/2006
Auteur: regisgia

Rajout dans TODO concernant le dump de l'automate.

Tag:    INLINEANNOT
Date:   21/04/2006
Auteur: fpottier

Corrigé l'inliner pour conserver les annotations de types en
l'absence de --infer.

Tag:    A
Date:   20/04/2006
Auteur: regisgia

Installe la doc dans $PREFIX/usr/share/doc, c'est standard.

Tag:    STARTNOPARAMETERIZED
Date:   19/04/2006
Auteur: regisgia

Les symbols "start" ne peuvent pas être paramétrés.

Tag:    IO
Date:   12/04/2006
Auteur: fpottier

Corrigé un bug dans (et simplifié) [IO.exhaust].

Tag:    JOLI
Date:   30/03/2006
Auteur: fpottier

Proprifié [Derivation] et modifié [Conflict] pour l'utiliser. C'est joli.
Ça rend déjà les conflits nettement plus lisibles, je crois, au moins sur
la grammaire démente de Christian...

Tag:    ITEMM
Date:   29/03/2006
Auteur: fpottier

Ajouté du code dans [Derivation]. Proprifié [Conflict] en vue des
changements à venir.

Tag:    DER
Date:   29/03/2006
Auteur: fpottier

Ajouté un module [Derivation] pour mieux abstraire la notion d'arbre
de dérivation et permettre un affichage plus fin des conflits. Pour
l'instant, les rapports de conflits sont essentiellement inchangés.
Pas terminé.

Tag:    XX
Date:   28/03/2006
Auteur: fpottier

Éliminé un bug subtil dans la recherche des conflits [Lr1partial].
Il fallait tenir compte de l'ombre pour décider si la recherche
devait stopper ou non. Le problème ne pouvait se manifester que
lorsque plusieurs états ont le même noyau (en général sur une
grammaire non-LALR(1)).

Tag:    COUNT
Date:   27/03/2006
Auteur: fpottier

Un changement dans le comptage des conflits reduce/reduce.

Tag:    BETTERERRORTODO
Date:   24/03/2006
Auteur: regisgia

Rajout dans TODO concernant les messages d'erreur.

Tag:    SH
Date:   20/03/2006
Auteur: fpottier

Mis à jour Makefile.shared pour utiliser aussi ocamldep.wrapper.

Tag:    ITEM
Date:   18/03/2006
Auteur: fpottier

Corrigé un bug stupide dans [Item].

Tag:    DEPO
Date:   17/03/2006
Auteur: fpottier

Corrigé l'option --depend (dans [Infer]) pour que les fichiers .ml ou .mli,
s'ils existent, ne soient pas détruits. Avec ça et mon wrapper autour
d'ocamldep, omake semble fonctionner correctement.

Tag:    OMAKE
Date:   17/03/2006
Auteur: fpottier

Ajouté des OMakefiles dans demos ainsi qu'un wrapper pour ocamldep.
Pas encore totalement au point.

Tag:    DOT
Date:   16/03/2006
Auteur: fpottier

Ajouté un affichage du graphe de dépendances au format dot.

Tag:    AUTOB
Date:   16/03/2006
Auteur: fpottier

Ajouté une détection des auto-epsilon-transitions dans [Item]. Ça ne
mange pas de pain et c'est plus cohérent.

Tag:    FOLLOW
Date:   14/03/2006
Auteur: fpottier

À la demande de Christian, ajouté le calcul des tables FOLLOW.
Elles sont affichées par --log-grammar 2.

Tag:    ENCORE
Date:   13/03/2006
Auteur: fpottier

Idem.

Tag:    GO
Date:   13/03/2006
Auteur: fpottier

Modifications au GNUmakefile pour faciliter la release GODI.

Tag:    CYCLE
Date:   13/03/2006
Auteur: fpottier

Amélioré le message d'erreur obtenu lorsque la grammaire engendre
un cycle d'epsilon-transitions.

Tag:    LOOP
Date:   13/02/2006
Auteur: fpottier

Amélioré (j'espère) Makefile.shared en déclarant les fichiers
.d SECONDARY pour empêcher make de boucler.

Tag:    GODI
Date:   12/02/2006
Auteur: fpottier

Corrigé quelques erreurs dans l'entrée godi de GNUmakefile.
Sorti un premier paquet GODI.

Tag:    BUGPRECEDENCEREDRED
Date:   06/02/2006
Auteur: regisgia

Corrige un bug de résolution des conflits reduce/reduce via
"precedence level". Dans le cas de deux branches provenant de
la même branche inlinée, elles ont la même priorité et on doit
refuser de résoudre ce conflit.

Tag:    BUGINLINING
Date:   06/02/2006
Auteur: regisgia

Corrige un bug de freshness dans l'inlining des non terminaux.
Rajoute le test correspondant.

Tag:    SHAR
Date:   03/02/2006
Auteur: fpottier

Modifié Makefile.shared pour essayer ocamlfind ocamlc puis
ocamlc.opt puis ocamlc.

Tag:    MISCNET
Date:   24/01/2006
Auteur: regisgia

Nettoie un peu Misc en enlèvant quelques fonctions inutiles.

Tag:    PREFIX
Date:   23/01/2006
Auteur: fpottier

Corrigé le test qui réclame la définition de $PREFIX.

Tag:    DIF
Date:   23/01/2006
Auteur: fpottier

Le Makefile d'installation utilise ocamlfind s'il est présent.

Tag:    XIF
Date:   23/01/2006
Auteur: fpottier

Encore des corrections au Makefile suite à mes derniers changements.

Tag:    AUTO
Date:   23/01/2006
Auteur: fpottier

Supprimé les scripts de configuration pour simplifier les choses
avec GODI.

Tag:    GODIVA
Date:   23/01/2006
Auteur: fpottier

Ajouté une spec.godiva et commencé à faire quelques ajouts
à GNUmakefile pour construire le paquet GODI.

Tag:    REV
Date:   06/01/2006
Auteur: fpottier

Supprimé les reversed_* de la librairie standard. Damien m'a fait
remarquer que la récursivité gauche n'est pas plus efficace que
la récursivité droite (les deux allouent dans le tas).

Tag:    TALK
Date:   05/01/2006
Auteur: fpottier

Ajouté mon exposé au GT Cristal de demain dans le sous-répertoire
talk/.

Tag:    DEM
Date:   27/12/2005
Auteur: fpottier

Ajouté un fichier AUTHORS. Améliorations à Makefile.shared et aux
démos (meilleurs rapports d'erreur).

Tag:    CHECK
Date:   19/12/2005
Auteur: fpottier

Corrigé quelques bugs dans check-ocaml-version (regexp fausse,
numéros de groupe faux) qui faisaient que le patchlevel n'était
pas reconnu.

Tag:    OCAML
Date:   18/12/2005
Auteur: fpottier

Ajouté pair et separated_pair à la librairie standard. Ajouté
un début de version Menhir de la grammaire d'ocaml dans
demo/menhir.mly (je ne savais pas trop où la mettre; c'est
temporaire).

Tag:    MKTEMP
Date:   14/12/2005
Auteur: regisgia

Un mktemp était toujours évalué dans GNUmakefile. Ca polluait
mon /tmp à chaque appel de make.

Tag:    MAKEFILECOMMONEMACS
Date:   14/12/2005
Auteur: regisgia

Rajoute une petite ligne pour la coloration de Makefile.common 
dans emacs.

Tag:    ALPHA
Date:   12/12/2005
Auteur: fpottier

Voilà, j'ai sorti ça en alpha release.

Tag:    PEPIN
Date:   12/12/2005
Auteur: fpottier

Corrigé un petit pépin obscur, la commande `make' ne fonctionnait
pas dans le package distribué (même si on recommande de faire
directement make install, c'est ennuyeux).

Tag:    MENHIR
Date:   12/12/2005
Auteur: fpottier

Renommé couac en menhir partout (j'espère).

Tag:    BAD
Date:   12/12/2005
Auteur: fpottier

Déplacé les fichiers qui traînaient dans bad-grammars.

Tag:    CHECKOCAMLVERSION
Date:   12/12/2005
Auteur: regisgia

Rajoute le test de la version des compilateurs caml.

Tag:    INST
Date:   12/12/2005
Auteur: fpottier

Ajouté un fichier INSTALL.

Tag:    OCA
Date:   12/12/2005
Auteur: fpottier

Adopté les licences d'ocaml et modifié GNUmakefile en conséquence.

Tag:    HEADER
Date:   12/12/2005
Auteur: fpottier

Modifié GNUmakefile pour ajouter un header à (presque) tous les fichiers
distribués. Utilise headache (de Vincent Simonet).

Tag:    PARP
Date:   11/12/2005
Auteur: fpottier

Corrigé un bug de [Printer]: manquait des parenthèses autour de
certains types affichés.

Tag:    INSTALL
Date:   10/12/2005
Auteur: fpottier

Encore plein de corrections aux Makefile.

Tag:    ENC
Date:   09/12/2005
Auteur: fpottier

Encore des changements aux Makefile, sûrement en conflit avec ceux que
tu as faits juste avant de partir.

Tag:    MAK
Date:   09/12/2005
Auteur: fpottier

Supprimé le fichier Makefile de l'archive cvs, puisqu'il est engendré
à partir de Makefile.in.

Tag:    BOTTE
Date:   09/12/2005
Auteur: fpottier

Changements aux Makefile pour tenter de proprifier la procédure de
bootstrap.

Tag:    DOK
Date:   09/12/2005
Auteur: fpottier

À peu près terminé la doc.

Tag:    INSTALLMAKEFILESHARED
Date:   09/12/2005
Auteur: regisgia

Installe Makefile.shared dans $prefix/usr/share/doc/$package_name

Tag:    TESTBATTERY1
Date:   09/12/2005
Auteur: regisgia

Mets à jour les fichiers .expected de incorrect-grammars.

Tag:    MAKEFILESHARED
Date:   09/12/2005
Auteur: regisgia

Modifie Makefile.shared pour pouvoir configurer ses variables de
l'extérieur.

Tag:    TRACEF
Date:   08/12/2005
Auteur: fpottier

Corrigé le mode --trace pour afficher le tout premier token lu.

Tag:    DIFF
Date:   08/12/2005
Auteur: fpottier

Ajouté à la doc une comparaison avec ocamlyacc. C'est long :)

Tag:    STARTISPUBLIC
Date:   08/12/2005
Auteur: regisgia

Les non terminaux déclarés %start sont aussi %public.

Tag:    OPT
Date:   08/12/2005
Auteur: fpottier

Avancé la doc en expliquant les options.

Tag:    CON
Date:   06/12/2005
Auteur: fpottier

Ajouté des exemples d'explications de conflits.

Tag:    D
Date:   06/12/2005
Auteur: fpottier

Ajouté quelques dépendances sur les %.d dans le Makefile partagé,
dans l'espoir de mieux faire fonctionner certains cas tordus.
Il reste une situation où make échoue (mais make; make réussit!)
parce qu'il met à jour un fichier .d mais ne ré-inclut pas la
version mise à jour avant de continuer. Le problème se manifeste
lorsqu'un édite un fichier .mly de façon à lui ajouter une
dépendance.

Tag:    TWO
Date:   05/12/2005
Auteur: fpottier

Ajouté une démo (calc-two) ou deux parsers partagent un lexer.
Mis à jour le Makefile canonique pour supporter des options
différentes au coup par coup. Supprimé certains warnings et
erreurs lorsqu'on est en mode --only-tokens.

Tag:    K
Date:   05/12/2005
Auteur: fpottier

Compliqué le Makefile canonique pour supporter les grammaires
multi-fichiers.

Tag:    HARD
Date:   04/12/2005
Auteur: fpottier

Remplacé . par un chemin absolu pour la librairie standard dans
la version de développement. Ça permet d'appeler couac depuis
un autre directory sans s'ennuyer.

Tag:    CONL
Date:   02/12/2005
Auteur: fpottier

Attaqué l'explication des explications de conflits :)

Tag:    PRETTYPRINTERSORTS
Date:   02/12/2005
Auteur: regisgia

Améliore l'affichage des sortes.

Tag:    OCCURSCHECKFIXED
Date:   02/12/2005
Auteur: regisgia

Corrige petit bug dans occurs check.

Tag:    MW
Date:   02/12/2005
Auteur: fpottier

Rajouté un cas de plus où on sait résoudre les conflits shift/reduce
multi-way (s'ils sont tous en faveur de ChooseNeither).

Tag:    ERRORINFERENCE
Date:   02/12/2005
Auteur: regisgia

Améliore l'inférence :
- ses messages d'erreur
- le code
Rajout d'une option VERBOSE pour le Makefile de incorrect-grammars.
VERBOSE=1 make test dans emacs permet de vérifier les messages 
facilement.

Tag:    STAN
Date:   02/12/2005
Auteur: fpottier

Expliqué la librairie standard.

Tag:    DIN
Date:   02/12/2005
Auteur: fpottier

Expliqué l'inlining dans la doc.

Tag:    AGG
Date:   02/12/2005
Auteur: fpottier

Rendu le warning contre les précédences inutiles plus agressif. Si une
précédence est *consultée* mais ne permet pas de *résoudre* un conflit,
on le signale aussi.

Tag:    TESTPARTIALGRAMMAR
Date:   02/12/2005
Auteur: regisgia

Rajoute quelques tests pour activer les messages d'erreur de partialGrammar.ml

Tag:    ERREURTOKENDEF
Date:   02/12/2005
Auteur: regisgia

Améliore le message d'erreur lorsqu'on utilise un nom de 
token pour un non terminal.

Tag:    FRONT-FRONT
Date:   02/12/2005
Auteur: regisgia

Effectue le renommage lors d'un clash avec un nom de l'utilisateur.
Les symboles privés le sont vraiment (d'ailleurs, il manquait un public
dans standard.mly).
Ajoute les tests correspondants.

Tag:    STDLIBFIX
Date:   02/12/2005
Auteur: regisgia

Répare une petite erreur dans le protocole d'installation.

Tag:    STDLIBFOLKS
Date:   02/12/2005
Auteur: regisgia

Installe la bibliothèque standard.

Tag:    CHAT
Date:   02/12/2005
Auteur: fpottier

Corrections au Makefile canonique.

Tag:    DEMOS
Date:   02/12/2005
Auteur: fpottier

Ajouté un répertoire demos avec mon Makefile supposé canonique
et une première démo triviale dans demos/calc.

Tag:    SOIREE
Date:   01/12/2005
Auteur: fpottier

Voilà pour ce soir.

Tag:    ADJUSTPACKAGING
Date:   01/12/2005
Auteur: regisgia

Bricoles.

Tag:    DOCINPACKAGE
Date:   01/12/2005
Auteur: regisgia

Installe et distribue la doc.

Tag:    DOCA
Date:   01/12/2005
Auteur: fpottier

Avancé la doc.

Tag:    PACKAGING
Date:   01/12/2005
Auteur: regisgia

Mise en place du packaging. 

Tag:    DOC
Date:   01/12/2005
Auteur: fpottier

Création d'un début de documentation.

Tag:    NOSELF
Date:   30/11/2005
Auteur: fpottier

Supprimé [Self].

Tag:    SELFG
Date:   30/11/2005
Auteur: fpottier

Après expérimentation plus poussée sur la grammaire de Caml, on voit
que [Self] avec let globaux est plus efficace qu'avec let locaux. Il
est même un chouilla plus efficace que sans [Self]. Voilà les chiffres
(temps de compilation avec ocamlopt.opt 3.09):

  --self local         : 60s
  --self local --infer : 55s
  --self global        : 21s
  aucune option        : 20s
  --infer              : 19s
  --self global --infer: 14s

J'en conlus que ça ne vaut guère la peine de se compliquer la vie,
et je vais supprimer --self.

Tag:    SELFGLOB
Date:   30/11/2005
Auteur: fpottier

Modifié [Self] pour utiliser des let globaux plutôt que locaux. Ça ne
change rien, semble-t-il.

Tag:    DQWD
Date:   30/11/2005
Auteur: fpottier

Supprimé la dépendance du Makefile sur ocamlfind.

Tag:    OUT
Date:   29/11/2005
Auteur: fpottier

Supprimé les manips crades sur les canaux dans [Settings].

Tag:    GOL
Date:   29/11/2005
Auteur: fpottier

Mis un peu d'ordre dans les appels à Error.log. J'ai distingué
trois catégories, logG, logA, logC, correspondant aux infos sur
la grammaire, l'automate, le code produit. On a un niveau de
verbosité distinct pour chaque catégorie.

Tag:    PARAMETERIZEDTEMPO
Date:   28/11/2005
Auteur: regisgia

Supprime deux temporaries dans parameterizedGrammar.ml

Tag:    MISCINDEXMAP
Date:   28/11/2005
Auteur: regisgia

Supprime un TEMPORARY dans misc.ml

Tag:    PRA
Date:   28/11/2005
Auteur: fpottier

Supprimé les derniers TEMPORARY du parser.

Tag:    ERRE
Date:   27/11/2005
Auteur: fpottier

Encore quelques changements dans les messages d'erreur.

Tag:    COL
Date:   27/11/2005
Auteur: fpottier

Ajouté des locations à plusieurs messages d'erreur. Ils en ont
maintenant tous lorsque ça a un sens.

Tag:    QUAL
Date:   27/11/2005
Auteur: fpottier

Vérifié que tous les accès au module [Error] sont explicitement
qualifiés.

Tag:    KO
Date:   27/11/2005
Auteur: fpottier

Supprimé la keyword substitution pour les fichiers du jeu de test,
elle nous met dedans à chaque fois.

Tag:    QWD
Date:   27/11/2005
Auteur: fpottier

Modifié fancy-parser pour mieux expliquer les erreurs dans les
déclarations. Corrigé un bug que j'avais introduit dans
[UnparameterizedPrinter] et amélioré l'affichage à mon goût.
Corrigé un bug qui introduisait encore des positions dummy.
Remis à jour le jeu de tests.

Tag:    SHARE
Date:   23/11/2005
Auteur: fpottier

Modifié fancy-parser pour suivre parser. Utilisé la nouvelle feature.

Tag:    POSITIONSPARTIAL
Date:   23/11/2005
Auteur: regisgia

Tous les messages d'erreur de PartialGrammar.ml ont des positions.

Tag:    STARTPOS
Date:   23/11/2005
Auteur: regisgia

Rajoute les positions aux messages d'erreur concernant la non définition
des symboles start. Ajoute le test conséquent.

Tag:    BATTERYUPDATE
Date:   23/11/2005
Auteur: regisgia

Met à jour quelques .expected de la batterie de tests.

Tag:    MULTI
Date:   23/11/2005
Auteur: fpottier

Modifié [Parser] pour accepter que plusieurs productions consécutives
partagent leur action sémantique. Pas testé. Pas encore modifié fancy-parser.

Tag:    AUX
Date:   23/11/2005
Auteur: fpottier

Renommé [Precedence] en [ParserAux].

Tag:    FILE
Date:   23/11/2005
Auteur: fpottier

Corrections mineures et ajout à la TODO list.

Tag:    EOF
Date:   21/11/2005
Auteur: fpottier

Corrigé un bug dans [Code]: on faisait peek() lors de la réduction
par défaut sur #, alors qu'on ne devait pas.

Tag:    SAMEPRECSAMELINE
Date:   21/11/2005
Auteur: regisgia

Le pretty-printer du front-end n'affichait pas les tokens ayant la 
même priorité sur la même ligne. C'est corrigé.

Tag:    P
Date:   21/11/2005
Auteur: fpottier

Proprifications diverses.

Tag:    USEINLINEANDINFER
Date:   21/11/2005
Auteur: regisgia

Affiche le warning pour --infer seulement lors de l'utilisation des %inline.
Vérifie correctement l'utilisation des %prec.

Tag:    LINE
Date:   19/11/2005
Auteur: fpottier

Ajouté des %inline dans fancy-parser et dans la librairie standard.
Ça semble marcher nickel. Plus quelques autres changements mineurs.

Tag:    W
Date:   19/11/2005
Auteur: fpottier

Modifié le générateur de code pour utiliser un préfixe _ et éviter
les avertissements d'ocaml 3.09. Testé sous 3.08 mais pas 3.09.

Tag:    UNUSEDTOKENS
Date:   17/11/2005
Auteur: regisgia

Teste l'utilisation des tokens.

Tag:    FILTERINLINETYPES
Date:   17/11/2005
Auteur: regisgia

Filtre les %types des non terminaux inlinés.

Tag:    INLINENOTDOLLAR
Date:   17/11/2005
Auteur: regisgia

Interdit l'utlisation des $i et de l'inlining au sein de la même 
branche.

Tag:    IN
Date:   17/11/2005
Auteur: fpottier

Renommé --no-inline-non-terminal en --no-inline.

Tag:    INLINEFORBIDDEN
Date:   17/11/2005
Auteur: regisgia

Vérifie qu'on ne peut pas mélanger %start et %inline ainsi 
que %prec et %inline.

Tag:    INLINETESTS
Date:   16/11/2005
Auteur: yann

Ajoute quelques tests.

Tag:    INLINESHIFT
Date:   16/11/2005
Auteur: yann

Ajout du décalage des $i.

Tag:    LISTMONAD
Date:   16/11/2005
Auteur: regisgia

Rajoute le module ListMonad.

Tag:    INLINECYCLE
Date:   16/11/2005
Auteur: regisgia

Verifie la non presence de cycle dans les definitions %inline.

Tag:    NTINLINING
Date:   16/11/2005
Auteur: regisgia

Intègre l'inlining de définition dans la chaîne de traitement.

Tag:    COMPOSEACTIONS
Date:   16/11/2005
Auteur: regisgia

Rajout de la composition des actions.

Tag:    PARSEINLINE
Date:   16/11/2005
Auteur: regisgia

Parse %inline et l'introduit sous la forme d'un flag dans 
parameterized_rule. 

Tag:    ACTIONMODULE
Date:   14/11/2005
Auteur: regisgia

Définit un module Action qui implémente pour le moment les actions
en encapsulant les stretchs.
Corrige un bug dans l'initialisation de names dans parameterized_grammar.ml

Tag:    ENSURE_FRESH
Date:   14/11/2005
Auteur: regisgia

Appelle ensure_fresh dans la fonction name_of de parameterized_grammar.ml
S'assure ainsi que InstanceTable est une injection.

Tag:    TERMNOTINRULES
Date:   14/11/2005
Auteur: regisgia

Commente un point de l'expansion de grammaire.
Supprime le TEMPORARY associé.

Tag:    STRETCH
Date:   14/11/2005
Auteur: regisgia

Insère un fichier stretch.mli implémentant le type stretch et
pkeyword.

Tag:    FIX
Date:   13/11/2005
Auteur: fpottier

Déplacé les prologues et postlogues dans la portée des %parameter.

Tag:    ATTENTION
Date:   13/11/2005
Auteur: fpottier

Ajouté des warnings à propos des %left, %right, %nonassoc, %prec jamais
consultés.

Tag:    PARAM
Date:   13/11/2005
Auteur: fpottier

Ajouté la syntaxe %parameter <X : sig ... end> pour déclarer des paramètres de
foncteur dont peut dépendre l'intégralité de la spécification. Supprimé une
redondance dans le lexer.

Tag:    RAP
Date:   12/11/2005
Auteur: fpottier

Réintroduit les parenthèses et virgules dans les noms des non-terminaux
créés par l'expansion. Il faut passer par [Misc.normalize] lorsqu'on
souhaite s'en débarrasser.

Tag:    NEAT
Date:   11/11/2005
Auteur: fpottier

Proprifié et rendu plus robustes les options --infer et --depend.
Coupé [Front] en deux: [PreFront] et [Front].

Tag:    PROF
Date:   09/11/2005
Auteur: fpottier

Changé le comportement de --depend pour calculer également les
dépendances des fichiers .cm[iox], et pas seulement des .ml et
.mli. En ce qui concerne le .cmi, le calcul est approché (pour
l'instant).

Tag:    DEPEND
Date:   09/11/2005
Auteur: fpottier

Ajouté l'option --depend pour calculer les dépendances nécessaires
à l'option --infer.

Tag:    INFEROPT
Date:   09/11/2005
Auteur: fpottier

Ajouté --infer pour que l'inférence soit optionnelle.

Tag:    AFFICHE
Date:   08/11/2005
Auteur: fpottier

Quelques corrections dans [UnparameterizedPrinter] et autres.
L'affichage est modifié.

Tag:    BITS
Date:   08/11/2005
Auteur: fpottier

Transformé [IL] en une interface pure et introduit [CodeBits] pour
regrouper quelques fonctions qui traînaient.

Tag:    SEP
Date:   08/11/2005
Auteur: fpottier

Corrigé une erreur dans la librairie standard.

Tag:    TESTS
Date:   08/11/2005
Auteur: regisgia

Rajoute une batterie de tests.

Tag:    LOG
Date:   08/11/2005
Auteur: fpottier

Modifié [Error.log] pour retarder le calcul du message à afficher.

Tag:    TEMPS
Date:   08/11/2005
Auteur: fpottier

Amélioré `make bootstrap` pour faire une mesure du temps de compilation
du parser par ocamlopt.opt. Ajouté une option --no-inline.

Tag:    CORR
Date:   08/11/2005
Auteur: fpottier

Quelques corrections.

Tag:    ML
Date:   07/11/2005
Auteur: fpottier

Changé les .ml sans code en .mli pour que le Makefile fonctionne mieux.

Tag:    INFER
Date:   06/11/2005
Auteur: fpottier

Ajouté et branché un module [Infer] pour effectuer l'inférence des types
des non-terminaux. Ce n'est pas si dur si on s'appuie sur ocamlc :) Ça
devrait éliminer les problèmes de position des messages d'erreur, et
simplifier l'interaction entre types algébriques généralisés et inférence
de types. Seul inconvénient: on ne peut plus compiler les fichiers du
répertoire sample-grammars, car il nous manque tous les fichiers ocaml
dont ils dépendent...

Séparé [Settings] et [Front] pour briser des dépendances circulaires.

Sorti [StringSet] et [StringMap] du module [Misc].

Tag:    SELFDONE
Date:   06/11/2005
Auteur: fpottier

Terminé d'implémenter et de brancher le module [Self]. Ça fonctionne, aussi
bien pour notre grammaire que pour celle de caml. Mais, pour cette dernière,
le temps de compilation passe de 29s à 44s avec ocamlc, et de 40s à 150s avec
ocamlopt. Donc, c'est un échec total. Mais il faudrait essayer de lier les
fonctions par let toplevel au lieu de let local, pour voir si ça change
quelque chose.

Tag:    SELFREC
Date:   06/11/2005
Auteur: fpottier

Ajouté la définition du record self lui-même.

Tag:    SELF
Date:   06/11/2005
Auteur: fpottier

Commencé à expérimenter avec le découpage du gros let rec en
passant par un record self explicite. Pour l'instant, engendré
uniquement la définition du type de ce record.

Tag:    TRA
Date:   05/11/2005
Auteur: fpottier

Augmenté [Traverse] avec une classe [map] et tenté d'accélérer
[Inliner], sans résultat.

Tag:    COUPE
Date:   05/11/2005
Auteur: fpottier

Supprimé [Cutter].

Tag:    CUT
Date:   05/11/2005
Auteur: fpottier

Ajouté un module [Traverse] pour manipuler plus facilement
la syntaxe abstraite [IL]. Ajouté un module [Cutter] pour
mesurer le nombre de composantes fortement connexes des
définitions récursives produites. On voit clairement qu'il
y en a en général une ou deux de taille importante, rarement
plus, et un petit nombre de taille 1. Il n'est donc pas
intéressant de tenter de couper notre gros let rec en petits
morceaux.

Tag:    TRACECO
Date:   05/11/2005
Auteur: fpottier

Partagé un peu de code en modes --trace et --comment.

Tag:    SMALL
Date:   05/11/2005
Auteur: fpottier

Rendu l'inliner un plus peu agressif de façon à supprimer les
fonctions qui ne font que sauter vers une autre fonction.

Tag:    WARN
Date:   05/11/2005
Auteur: fpottier

Modifié la génération de code pour éviter les warnings d'ocaml
3.09 à propos des variables non utilisées.

Tag:    CHOUETTE
Date:   03/11/2005
Auteur: fpottier

Amélioré parser.mly et surtout fancy-parser.mly pour exploiter
autant que possible les nouvelles features de couac.

Tag:    MOD
Date:   03/11/2005
Auteur: fpottier

Corrigé le parser pour autoriser modifier? et non modifier*. Le
second n'avait pas grand-sens.

Tag:    STAR
Date:   02/11/2005
Auteur: fpottier

Introduit un tout petit peu d'utilisation des symboles paramétrés
dans fancy-parser. Proprifié la sortie de [UnparameterizedPrinter].

Tag:    SAFE
Date:   02/11/2005
Auteur: fpottier

Ajouté des annotations de types dans le code engendré pour éviter
que trop de magic ne fassent passer inaperçues des erreurs dans
les actions sémantiques.

Tag:    POUF
Date:   02/11/2005
Auteur: fpottier

Remis fancy-parser à jour. Quelques corrections dans le générateur
de code pour faire passer la grammaire de Caml (pas fini).

Tag:    EQMODPOS
Date:   02/11/2005
Auteur: regisgia

Rajout de l'égalité modulo position entre paramètres pour pouvoir 
les utiliser dans une table de hachage.

Tag:    EXPANSIONFIXED
Date:   02/11/2005
Auteur: regisgia

Supprime le bug de l'expansion (dû à un problème d'utilisation
de la génération de noms frais).

Tag:    GRR
Date:   01/11/2005
Auteur: fpottier

À peu près terminé de proprifier tout le back-end.

Tag:    GRAMONT
Date:   01/11/2005
Auteur: fpottier

Terminé de proprifier l'interface de [Grammar].

Tag:    GRAMO
Date:   31/10/2005
Auteur: fpottier

Presque entièrement proprifié l'interface de [Grammar].

Tag:    TOKENTYPE
Date:   31/10/2005
Auteur: fpottier

Ajouté des flags pour dire comment on veut gérer le type des tokens
et un module [TokenType] pour se débrouiller avec ça.

Tag:    STREAM
Date:   31/10/2005
Auteur: fpottier

Localisation et tentative d'explication des conflits end-of-stream
dans le fichier .output.

Tag:    UNREACH
Date:   31/10/2005
Auteur: fpottier

Ajouté des warnings lorsqu'il n'y a aucun symbole d'entrée ou
lorsque certains symboles sont inaccessibles.

Tag:    EMPTY
Date:   31/10/2005
Auteur: fpottier

Ajouté un warning à propos des non-terminaux qui engendrent le
langage vide.

Tag:    TODO
Date:   31/10/2005
Auteur: fpottier

Supprimé design-notes et ajouté un fichier TODO à jour.

Tag:    BOOK
Date:   31/10/2005
Auteur: fpottier

Petite correction sur la traduction de $syntaxerror.

Tag:    SYNTAXERROR
Date:   30/10/2005
Auteur: fpottier

Ajouté le mot-clef $syntaxerror pour qu'une action sémantique
puisse déclencher une erreur.

Tag:    FLAG
Date:   30/10/2005
Auteur: fpottier

Ajouté un flag --error-recovery pour indiquer que l'on souhaite
faire de la reprise sur erreur. Si on ne fournit pas le flag,
on économise éventuellement un chouilla en taille de code, on
évite certains warnings, et on permet la réduction par défaut
dans les états atteints en décalant [error]. Ça doit être ce
à quoi on s'attend si on veut juste afficher un message et
échouer.

Tag:    TOTAL
Date:   30/10/2005
Auteur: fpottier

On n'engendre pas l'exception Error si elle n'est jamais lancée,
donc si on peut prouver que le parser n'échoue jamais.

Tag:    MLI
Date:   30/10/2005
Auteur: fpottier

Amélioré la tronche du .mli engendré.

Tag:    SHIFTREDUCEPOP
Date:   28/10/2005
Auteur: fpottier

Correction pour prendre en compte l'interaction entre l'optimisation
shiftreduce et le code de déroulage de la pile.

Tag:    POP
Date:   28/10/2005
Auteur: fpottier

Laissé tomber mes try/with complètement faux et ajouté un déroulage
manuel de la pile en cas d'erreur. Ça semble fonctionner, mais le
code n'est pas encore proprifié (commentaires en retard) et il
manque un moyen pour l'utilisateur de déclencher une erreur depuis
une action sémantique.

Tag:    FANCYPARSER
Date:   28/10/2005
Auteur: regisgia

Met à jour fancy-parser.mly

Tag:    NOMOREPROLOG
Date:   28/10/2005
Auteur: regisgia

Supprime le prologue dans les parseurs en créant le fichier precedence.ml
et en déplacant la fonction check_keywords dans partial_grammar.ml

Tag:    FRESH_INSTANCE
Date:   28/10/2005
Auteur: regisgia

On s'assure que les noms choisis pour l'instanciation des non terminaux
paramétrés sont frais.

Tag:    UGPRINTER
Date:   28/10/2005
Auteur: regisgia

Rajout d'un afficheur pour les grammaires non paramétrées ainsi que 
d'une option permettant l'affichage du résultat du préprocessing.

Tag:    INFERTOKEN
Date:   28/10/2005
Auteur: regisgia

Corrige un bug dans le typeur : je supposais que tous les identifiants
étaient dans l'environnement. Or, seuls les non terminaux le sont.
Les non terminaux ont tous le type Star.

Tag:    BAS
Date:   27/10/2005
Auteur: fpottier

Raffiné le calcul de l'invariant pour distinguer le cas où la queue de la pile
est vide de celui où elle est inconnue. Vérifié expérimentalement l'hypothèse
que, dans tous les états où la queue de la vide est inconnue, au moins un état
est physiquement représenté dans le suffixe connu. Cela devrait nous permettre
de dérouler manuellement la pile en cas d'erreur.

Tag:    RESYNC
Date:   27/10/2005
Auteur: fpottier

Corrigé la resynchronisation sur erreur. D'une part, on engendrait parfois du
code de resynchronisation dans des états où elle ne pouvait en fait pas avoir
lieu. D'autre part, il me semble qu'il faut inhiber les réductions par défaut
pour les états capables d'effectuer une resynchronisation, sauf dans le cas où
il s'agit d'une réduction par défaut sur # (dans ce cas, la grammaire spécifie
qu'on est content lorsque l'on termine sur une erreur, et il n'y a pas lieu de
tenter une resynchronisation). Par ailleurs, ajouté un warning pour le cas où
la resynchronisation peut provoquer la non-terminaison. Ce warning repose sur
l'attribution d'une sigification spéciale au token EOF.

Tag:    PRINTER
Date:   27/10/2005
Auteur: fpottier

Amélioré l'afficheur pour mieux parenthéser les expressions
et afficher les opérateurs arithmétiques de façon infixe.
Amélioré [FancyParser] pour éviter de boucler lorsqu'on on
tombe sur la fin de fichier en mode récupération sur erreur.
Enfin, écrit un début de librairie standard dans standard.mly.

Tag:    Q
Date:   26/10/2005
Auteur: fpottier

Proprifié quelques emplois du module [Queue] en introduisant
[Misc.qfold] et [Misc.qiter]. Amélioré un peu l'inliner, qui
devrait maintenant fonctionner correctement en présence de
code mort (mais le générateur n'en produit pas, je crois).

Tag:    DOWN
Date:   26/10/2005
Auteur: fpottier

Et voilà, supprimé l'élimination des productions unité.

Tag:    UNITE
Date:   26/10/2005
Auteur: fpottier

Réactivé l'élimination des productions unité, mais ce n'est
que pour mieux les supprimer. Mes statistiques montrent que
cette optimisation ne fonctionne que dans de rares cas,
disons au mieux pour 5% des productions, souvent moins.
Cela est lié au fait qu'elle est incompatible avec l'optimisation
shiftreduce, dont j'ai augmenté l'applicabilité. Donc, je vais
la supprimer, ça ne changera pas grand-chose et ça simplifiera
le code.

Tag:    GOTOPUSH
Date:   26/10/2005
Auteur: fpottier

Raffiné la décision d'effectuer un push dans goto ou dans les
fonctions run qui suivent, ce qui donne plus d'opportunités
pour l'optimisation shiftreduce. C'est assez compliqué.
Optimisation `unit production elimination' désactivée
temporairement. Je vais réévaluer son utilité.

Tag:    UNIT
Date:   26/10/2005
Auteur: fpottier

Implémenté `unit production elimination'. Ça ne rapporte pas
grand-chose, mais ce n'était pas très dur non plus. Proprifié
au passage certains points du générateur de code.

Tag:    POSS
Date:   26/10/2005
Auteur: fpottier

Corrigé [Invariant], qui demandait que l'on conserve trop
d'informations de positions, suite à une petite naïveté.

Tag:    SHIFTREDUCE
Date:   25/10/2005
Auteur: fpottier

Ajouté l'optimisation shiftreduce au générateur de code. Ça
permet d'éviter l'allocation d'une cellule de pile lorsqu'un
shift est immédiatement suivi d'un reduce. Encore une ou deux
optimisations pour l'honneur (car ça ne rapporte pas vraiment
grand-chose) et j'arrête...

Tag:    MULTIPLEPOSERROR
Date:   25/10/2005
Auteur: regisgia

Permet l'affichage d'erreur à positions multiples.

Tag:    UNIQFILENAME
Date:   25/10/2005
Auteur: regisgia

S'assure de l'unicité des fichiers spécifiés en ligne de commande.

Tag:    APPLICATIONTOTALE
Date:   24/10/2005
Auteur: regisgia

Modifie le typeur pour n'accepter que les applications totales.

Tag:    FANCY
Date:   24/10/2005
Auteur: fpottier

Mis à jour [FancyParser] pour refléter les changements dans [Parser].

Tag:    MISSINGFILES
Date:   24/10/2005
Auteur: regisgia

Il manquait les nouveaux fichiers.

Tag:    FRONTFIXED
Date:   24/10/2005
Auteur: regisgia

Le front-end est corrigé et doit être en correspondance avec
la spec.

Tag:    RECO
Date:   24/10/2005
Auteur: fpottier

On arrête après le parsing s'il y a eu des erreurs.

Tag:    ASSERT
Date:   24/10/2005
Auteur: fpottier

Petites améliorations diverses.

Tag:    SYNC
Date:   23/10/2005
Auteur: fpottier

Renommé le mot-clef $shifted en $previouserror, et changé sa sémantique
pour que ça fasse ce à quoi on s'attend. Ça semble fonctionner. Supprimé
toute tentative de gestion d'erreurs dans [Parser] et amélioré la gestion
d'erreurs dans [FancyParser].

Tag:    SHIFT
Date:   22/10/2005
Auteur: fpottier

Ajouté un support préliminaire pour les mots-clef de la famille "ofs"
($startofs, $endofs, etc.) ainsi que pour le mot-clef $shifted. Problème:
lorsqu'on accède à $shifted dans une production d'erreur, en général il vaut 0
parce qu'on vient de détecter une erreur. Ce qu'on aurait voulu, c'est sa
valeur juste avant la détection de l'erreur. Il faut que je réfléchisse un
peu.

Tag:    TYPA
Date:   22/10/2005
Auteur: fpottier

Annoté les actions sémantiques par des types pour garantir un bon
rapport des erreurs de typage dans les actions.

Tag:    GOT
Date:   22/10/2005
Auteur: fpottier

Économisé un chouilla en taille de code en effectuant l'allocation
d'une cellule de pile dans [goto] au lieu de le faire dans les
fonctions [run] appelées.

Tag:    NUIT
Date:   21/10/2005
Auteur: fpottier

La séparation entre parser.mly et fancy-parser.mly est faite,
ça semble marcher. Testé un peu les positions, ça semble bon,
au moins dans les cas simples. (Je n'ai pas encore 100% confiance.)
Amélioré le lexer pour mieux rapporter les positions de début des
lexèmes complexes.

Tag:    FLOC
Date:   21/10/2005
Auteur: fpottier

Ajouté la génération de code pour les positions. Je ne sais pas
trop dans quelle mesure ça marche. Je ne l'ai pas encore testé.
Dédoublé le parser, mais pas encore testé non plus.

Tag:    LOC
Date:   21/10/2005
Auteur: fpottier

Ajouté le calcul de point fixe qui détermine quelles positions
on doit mémoriser.

Tag:    SHA
Date:   21/10/2005
Auteur: fpottier

Corrigé l'explication des conflits reduce/reduce dans le
cas où le lookahead token est #.

Tag:    LEXLOC
Date:   21/10/2005
Auteur: fpottier

Ajouté les mots-clef désignant les locations au lexer.

Tag:    PHO
Date:   21/10/2005
Auteur: fpottier

Amélioré un message d'erreur dans un coin. Compté combien d'opportunités
on a pour l'optimisation shiftreduce combinés; plutôt beaucoup.

Tag:    PARENTHESE
Date:   21/10/2005
Auteur: fpottier

Passé aux parenthèses pour délimiter les arguments.

Tag:    KEYWORD
Date:   20/10/2005
Auteur: fpottier

Mémorisé explicitement la liste des $i rencontrés dans une action
sémantique, afin de pouvoir vérifier qu'ils sont dans les bornes,
etc.

Tag:    FIN
Date:   20/10/2005
Auteur: fpottier

Terminé de proprifier [Code]. Mille cinq cents lignes pile.

Tag:    CONT
Date:   20/10/2005
Auteur: fpottier

Continué.

Tag:    AME
Date:   20/10/2005
Auteur: fpottier

Continué les améliorations.

Tag:    PROP
Date:   20/10/2005
Auteur: fpottier

Commencé à proprifier [Code].

Tag:    DEFAUT
Date:   19/10/2005
Auteur: fpottier

Ajouté les réductions par défaut. Sans fioritures (c'est-à-dire sans --trace
et avec -noassert), le code produit (parser.o) fait 45K, tandis qu'avec
ocamlyacc on obtient 23K. Ça me semble raisonnable! Cela dit, l'ajout de la
gestion des positions (par exemple) va nous faire remonter.

Tag:    POKE
Date:   19/10/2005
Auteur: fpottier

Implanté une optimisation similaire à la précédente, qui consiste
à lire directement [env.token], sans consulter [env.shifted],
lorsqu'on veut faire [peek] et lorsqu'on sait que [env.shifted]
ne peut pas être égal à -1... On croise les doigts pour la
correction.

Tag:    RECOVERY
Date:   19/10/2005
Auteur: fpottier

Optimisé le rattrapage sur erreur en n'appelant [signal] que dans
les états ou le rattrapage est possible. Supprimé les définitions
sans productions dans la grammaire.

Tag:    SHIFTED
Date:   19/10/2005
Auteur: fpottier

Découvert que le champ [env.token_is_error] était redondant avec
[env.shifted], et supprimé le premier.

Tag:    TRACE
Date:   19/10/2005
Auteur: fpottier

Corrigé des choses dans la gestion des erreurs et dans l'affichage
du mode --trace.

Tag:    BON
Date:   18/10/2005
Auteur: fpottier

Petits changements divers. Ajouté des productions d'erreur dans notre
propre grammaire pour étudier un peu la façon dont elles sont compilées.
Ça n'a pas l'air de marcher exactement comme ça devrait, mais je n'ai
pas le temps de déboguer ce soir. Probablement le compteur [env.shifted]
qui est off by one, plus peut-être d'autres erreurs.

Tag:    PARSEERROR
Date:   18/10/2005
Auteur: fpottier

Supprimé la fonction [parse_error] et la convention selon laquelle
elle est appelée si le dernier appel n'est pas trop récent.

Tag:    NAME
Date:   18/10/2005
Auteur: fpottier

Supprimé la directive %name qui ne servait à rien.

Tag:    BOOTSTRAP
Date:   18/10/2005
Auteur: fpottier

Corrigé un bug honteux (encore un!) dans le calcul des FIRST. Ajouté
un mode --trace pour suivre ce que fait le parseur engendré. Et le
tout bootstrappe (make bootstrap). Champagne!

Tag:    BOOT
Date:   17/10/2005
Auteur: fpottier

Ajouté la production du fichier [.mli]. Sur `make bootstrap', ça compile
et ça tourne sans segmentation fault... mais ça s'arrête tout de suite
en disant `parse error'.

Tag:    SIMPLE
Date:   17/10/2005
Auteur: fpottier

Beaucoup simplifié le module [Invariant] en cherchant moins à faire le
malin. Pour la première fois, le code produit compile.

Tag:    INVA
Date:   14/10/2005
Auteur: fpottier

Commencé à insérer quelques annotations de types dans le code produit.
Corrigé une erreur de conception dans [Invariant]. Néanmoins ça ne
marche pas (make self), il y a encore des erreurs logiques dans
[Invariant] et/ou [Code].

Tag:    PAREN
Date:   14/10/2005
Auteur: fpottier

Amélioré le lexer, suite aux suggestions de Jean-Christophe,
pour détecter plus tôt les parenthèses mal équilibrées. Par
ailleurs, on accepte maintenant les commentaires (* Ocaml *).

Tag:    REDUCE
Date:   14/10/2005
Auteur: fpottier

Raffiné les cas dans lesquels la fonction [reduce] a besoin
d'un paramètre [state].

Tag:    ENTRY
Date:   13/10/2005
Auteur: fpottier

Diverses corrections.

Tag:    ENTREE
Date:   13/10/2005
Auteur: fpottier

Ajouté la génération de code pour les points d'entrée, pas
tout-à-fait au point.

Tag:    PRO
Date:   13/10/2005
Auteur: fpottier

Ajouté la copie des prologues et postlogues ainsi que la
définition par défaut de [parse_error].

Tag:    ERREUR
Date:   13/10/2005
Auteur: fpottier

Terminé (en principe) d'implanter la gestion des erreurs.

Tag:    TIM
Date:   13/10/2005
Auteur: fpottier

Corrigé quelques points de chronométrage.

Tag:    PR
Date:   12/10/2005
Auteur: fpottier

Terminé d'écrire l'inliner, qui semble fonctionner. Ça me permet
de corriger un bug introduit dans TRY (certaines fonctions étaient
inlinées plusieurs fois, donc dupliquées). Corrigé (j'espère) le
pretty-printer pour mieux traiter le parenthésage autour des
constructions ouvertes (let, séquence, record-write, comment).

Tag:    INLINER
Date:   12/10/2005
Auteur: fpottier

Comme ma dernière modification complique mon inlining prédictif, je
change d'approche et je commence à écrire un inliner a posteriori.
Pas terminé.

Tag:    TRY
Date:   12/10/2005
Auteur: fpottier

Commencé à effectuer quelques changements en vue de l'ajout de la gestion
d'erreur. Les actions (shift ou reduce) sont maintenant isolées dans un
handler pour l'exception [Parse_error]. La fonction [peek], qui était
inlinée partout, a réapparu.

Tag:    RECOVER
Date:   12/10/2005
Auteur: fpottier

Ajouté dans sample-grammars/simple-recovery-test un exemple
qui montre que le comportement de yacc/ocamlyacc sur erreur
est... étrange (faire cvs up -d).

Tag:    PRI
Date:   11/10/2005
Auteur: fpottier

Corrigé (je crois) un petit bug dans l'affichage des types.

Tag:    COD
Date:   11/10/2005
Auteur: fpottier

Corrigé un bug dans le lexer à propos des accolades imbriquées.
Ajouté la génération des types token et env. Corrigé la gestion
des pseudo-tokens dans [Grammar].

Tag:    POSITIONS2
Date:   06/10/2005
Auteur: regisgia

Utilise le module [Error] pour formater les messages d'erreurs. 
Les positions sont fournies de manière systématique.

Tag:    COR
Date:   03/10/2005
Auteur: fpottier

Corrigé (j'espère) une petite erreur dans mon code de ce matin.

Tag:    SHARP
Date:   03/10/2005
Auteur: fpottier

Changé de stratégie à propos de la gestion de fin du flot de
lexèmes, pour refléter (j'espère) la stratégie d'ocamlyacc.
Ajouté un warning ("end-of-stream conflict") lorsque cela me
conduit à ignorer des réductions possibles sur le pseudo-token
"#". Cela correspond à des grammaires pour lesquelles il n'est
parfois pas possible de prédire si on a atteint la fin de ce que
l'on attend (par exemple, si un symbole d'entrée est défini
comme une liste de machins, sans terminateur).

Tag:    BOF
Date:   02/10/2005
Auteur: fpottier

Encore quelques changements, mais je piétine. J'ai découvert pas
mal de problèmes en voulant ajouter les types. Je vais prendre
un peu de recul...

Tag:    PRINT
Date:   30/09/2005
Auteur: fpottier

Ajouté les types au printer. Premier jet (très incomplet) de la
déclaration du type state.

Tag:    ENV
Date:   30/09/2005
Auteur: fpottier

Ajouté un paramètre env partout. Défini peek() et dicard_and_peek()
de façon concrète.

Tag:    DECO
Date:   30/09/2005
Auteur: fpottier

Nombreux changements dans le calcul de l'invariant et dans la
génération de code.

Tag:    ERROR
Date:   30/09/2005
Auteur: regisgia

Les tokens réservés sont un cas particulier : ils ne sont jamais
déclarés.

Tag:    INV
Date:   29/09/2005
Auteur: fpottier

Commencé à écrire la reconstruction de l'invariant. J'ai un bout
de machin pas fini.

Tag:    FIXPREC
Date:   28/09/2005
Auteur: regisgia

Les déclarations d'associativité ne déclarent pas le token.
Si un token n'a pas de déclaration mais seulement une associativité,
alors il ne peut etre utilisé qu'apres un %prec.
Corrige aussi les mauvais choix de nom de champs.

Tag:    BACK
Date:   28/09/2005
Auteur: fpottier

Effectué la modif du back-end pour gérer les précédences.

Tag:    CONFE
Date:   27/09/2005
Auteur: fpottier

Commencé à changer mon code de gestion des conflits dans [Lr1].
La construction LR(0) semble devenue quatre fois plus lente
qu'avant -- je me demande depuis quelle version? À creuser.

Tag:    REACH
Date:   27/09/2005
Auteur: fpottier

Ajouté une minuscule analyse d'accessibilité sous forme d'un
module séparé.

Tag:    DEP
Date:   27/09/2005
Auteur: fpottier

Corrigé (?) quelques erreurs dans la gestion des précédences
par le front-end, mais il en reste (cf. commentaires).

Tag:    PEEK
Date:   23/09/2005
Auteur: fpottier

Déplacé l'appel à discard() de l'appelant vers l'appelé (donc la
fonction [run] pour l'état cible de la transition), ce qui permet
ensuite de fusionner cet appel avec l'appel à peek() qui suit.
Les deux primitives sont donc maintenant peek() et discard_and_peek().

Tag:    INLINE
Date:   23/09/2005
Auteur: fpottier

Inliné les fonctions run/goto/reduce lorsqu'elles ne sont appelées
qu'une fois.

Tag:    RED
Date:   23/09/2005
Auteur: fpottier

Isolé les réductions dans des fonctions reduce pour éviter de
dupliquer le code des actions sémantiques.

Tag:    GOTO
Date:   23/09/2005
Auteur: fpottier

Ajouté la génération des fonctions goto.

Tag:    WHITE
Date:   23/09/2005
Auteur: fpottier

Modifié le pretty-printer pour allouer moins, mais ça ne change rien.

Tag:    COLONNE
Date:   22/09/2005
Auteur: fpottier

Ajusté l'affichage des #line pour que les colonnes soient bonnes.

Tag:    POS
Date:   22/09/2005
Auteur: fpottier

Supprimé les positions sur HEADER et OCAMLTYPE car elles étaient fausses.
Amélioré l'affichage des #line, mais c'est pas encore ça.

Tag:    FORME
Date:   22/09/2005
Auteur: fpottier

Supprimé l'emploi du module [Format]. La phase d'impression va
cinq fois plus vite :)

Tag:    CELL
Date:   22/09/2005
Auteur: fpottier

Les cellules de pile sont maintenant des tuples anonymes, ça fait
moins de bruit.

Tag:    ACTION
Date:   22/09/2005
Auteur: fpottier

Corrigé le code pour prendre compte les tokens d'arité 0 ou 1.
Transformé la définition du type [Syntax.stretch], mais il y a
redondance avec les positions gérées par [Position].

Tag:    POH
Date:   22/09/2005
Auteur: fpottier

Commencé à cracher un peu de code.

Tag:    ABSTRACTPUBLIC
Date:   22/09/2005
Auteur: regisgia

Permet la déclaration de non terminaux publics 
sans leur donner de productions associées.

Tag:    PRECEDENCE
Date:   22/09/2005
Auteur: regisgia

Calcule les précédences des règles et des tokens.
Implémente la résolution des conflicts s/r et r/r.

Tag:    CODE
Date:   22/09/2005
Auteur: fpottier

Commencé à écrire le générateur de code. Je vais au plus simple
pour l'instant.

Tag:    PREC
Date:   20/09/2005
Auteur: fpottier

Ajouté un module [Grammar.Precedence] pour que le back-end ait
accès aux infos de précédence. Implémentation bidon pour le
moment.

Tag:    ERROR1
Date:   19/09/2005
Auteur: yann

Positions pour l'erreur de définition d'un non terminal par des 
définitions n'ayant pas une arité homogène.

Tag:    POSITIONS
Date:   19/09/2005
Auteur: yann

Rajoute la gestion des positions pour les messages d'erreur.
Je vais rajouter le minimum d'annotations de position pour éviter
de polluer le code. Ce patch décore les déclarations de tokens.

Tag:    OPTBRACKET
Date:   19/09/2005
Auteur: yann

Corrige le bug d'affichage des non terminaux non paramétrés.

Tag:    MANGLING
Date:   19/09/2005
Auteur: yann

Les noms de fichiers ne sont plus tronqués et sont réécrit dans
le langage des non terminaux.

Tag:    STARTSYMS_PUBLIC
Date:   19/09/2005
Auteur: yann

Les points d'entrée sont publics.

Tag:    SUBST_ID
Date:   19/09/2005
Auteur: yann

Ignore les substitutions qui sont l'identité.

Tag:    MULTIDEF_SAMEUNIT
Date:   19/09/2005
Auteur: yann

Corrige un bug : lorsqu'un non terminal privé est défini par
morceaux dans la même unité, il y avait un renommage.

Tag:    PARSETOKEN
Date:   19/09/2005
Auteur: yann

Corrige le parseur pour accepter les virgules entre les 
déclarations de tokens.

Tag:    CONFLITS
Date:   19/09/2005
Auteur: fpottier

Quelques remarques sur la résolution de conflits à l'aide de
précédences.

Tag:    CONF
Date:   16/09/2005
Auteur: fpottier

Évité une deuxième instantiation de [Item.Closure] dans [Conflict]
en passant par une nouvelle fonction [Lr0.closure].

Tag:    PAR
Date:   15/09/2005
Auteur: fpottier

Proprifié [Lr1partial].

Tag:    LR1
Date:   15/09/2005
Auteur: fpottier

Proprifié [Lr1].

Tag:    EXPANSION
Date:   15/09/2005
Auteur: regisgia

Expansion des grammaire parametrees.

Tag:    BIT
Date:   15/09/2005
Auteur: fpottier

Proprifié [CompressedBitSet].

Tag:    LEGER
Date:   15/09/2005
Auteur: fpottier

Légère accélération de [CompressedBitSet.fold].

Tag:    PROPRE
Date:   14/09/2005
Auteur: fpottier

Proprifié les modules [Grammar] et [Item].

Tag:    CONFITURE
Date:   13/09/2005
Auteur: fpottier

Hop, voilà une première version de l'explication des conflits
qui semble fonctionner...

Tag:    CONFLIT
Date:   13/09/2005
Auteur: fpottier

Attaqué l'explication des conflits.

Tag:    SEC
Date:   06/09/2005
Auteur: fpottier

Simplifié l'affichage des temps dans [Time].

Tag:    COM
Date:   06/09/2005
Auteur: fpottier

Gagné encore 15% sur le jeu de tests complet en améliorant
[CompressedBitSet].

Tag:    NON
Date:   05/09/2005
Auteur: fpottier

Mais non, l'amélioration `OH` était un bug grotesque.
Annulé.

Tag:    OH
Date:   05/09/2005
Auteur: fpottier

Gagné encore du temps (de GC) en effaçant les champs
transients à l'issue du calcul de clôture.

Tag:    VITE
Date:   05/09/2005
Auteur: fpottier

Implémenté le calcul de clôture en termes du graphe des
items. Ça booste! De l'ordre de trois secondes pour le
jeu de tests complet.

Tag:    GRAPH
Date:   04/09/2005
Auteur: fpottier

Ajouté la construction d'un graphe des items dans [Item].
Pour l'instant, elle ne sert à rien, mais j'ai un plan...

Tag:    STEPS
Date:   02/09/2005
Auteur: regisgia

Définit les différentes phases d'analyse de la grammaire dans
front. On a maintenant un module ParameterizedGrammar qui
s'occupera de faire le test de bonne formation, le typage 
et l'expansion.

Tag:    PARTIALGRAMMAR
Date:   02/09/2005
Auteur: regisgia

Rajoute PartialGrammar pour modulariser.
Ajustement de la syntaxe du nommage de regle.

Tag:    IMPROVETOKENERROR
Date:   31/08/2005
Auteur: regisgia

Améliore le message d'erreur lorsqu'un token est
défini deux fois dans un même fichier.

Tag:    TARJAN
Date:   31/08/2005
Auteur: fpottier

Ressuscité [UnionFind], qui va servir à l'inférence de types,
et ajouté [Tarjan], qui va servir à détecter les blocs de
définitions mutuellement récursives.

Tag:    NAMEDPROD
Date:   31/08/2005
Auteur: regisgia

Les règles de production peuvent maintenant être nommées.

Tag:    NAMEDPRODUCERS
Date:   31/08/2005
Auteur: regisgia

Les producteurs des règles peuvent être nommés.


Tag:    PARTIALGRAMMARS
Date:   30/08/2005
Auteur: regisgia

La grammaire est spécifiée par union des fichiers.

Tag:    MULTIFILES
Date:   29/08/2005
Auteur: regisgia

On peut maintenant charger plusieurs fichiers.


Tag:    PUBLIC
Date:   29/08/2005
Auteur: regisgia

Modifie la grammaire. On peut optionnellement specifier
qu'un non terminal est public en rajouter %public devant
sa définition dans la grammaire.

Tag:    RIRE
Date:   24/08/2005
Auteur: fpottier

Changements mineurs dans [CompressedBitSet].

Tag:    COMPRESSEDBITSET
Date:   24/08/2005
Auteur: regisgia

Ajouté le module [CompressedBitSet]. 
Intégré dans le fichier lr0.ml.

Tag:    TIME
Date:   23/08/2005
Auteur: fpottier

Ajouté un module [Time] pour faire un peu de chronométrage. La
construction de l'automate LR(0) domine maintenant. Reste à
comprendre pourquoi elle est si lente.

Tag:    FIND
Date:   23/08/2005
Auteur: fpottier

Supprimé [UnionFind] qui ne servait (plus?) à rien.

Tag:    GRAM
Date:   23/08/2005
Auteur: fpottier

Ajouté encore un gros tas de grammaires exemples. Corrigé un
bug dans le lexer et un dans le parser.

Tag:    SAMPLE
Date:   23/08/2005
Auteur: fpottier

Ajouté pas mal de grammaires dans sample-grammars/.

Tag:    QUEUE
Date:   23/08/2005
Auteur: fpottier

Remplacé la structure de depth-first search par une structure
de queue explicite, ce qui évite de dupliquer les requêtes
d'exploration lorsque des noeuds sont fusionnés. On gagne un
facteur 2 supplémentaire. La grammaire de FlowCaml passe en
une seconde environ.

Tag:    PAGER
Date:   23/08/2005
Auteur: fpottier

Implanté l'algorithme de Pager, avec fusion au vol des états
compatibles. On gagne du temps sur l'exemple de FlowCaml mais
ça reste encore un peu long.

Tag:    WEAK
Date:   23/08/2005
Auteur: fpottier

Implanté le test de compatibilité faible de Pager, et vérifié
expérimentalement que pour toutes les grammaires considérées
jusqu'ici, tous les états construits sont en fait compatibles
dès qu'ils ont le même core. Ajouté dans samples/ une grammaire
LR(1) mais pas LALR(1) et vérifié que cette grammaire donne
lieu à deux états incompatibles.

Tag:    UNION
Date:   19/07/2005
Auteur: fpottier

Corrigé mon bug dans [Patricia], je n'avais modifié qu'un seul
des deux exemplaires de [union].

Tag:    DEPART
Date:   18/07/2005
Auteur: fpottier

Amélioré [Patricia] pour ne pas allouer inutilement de mémoire
lorsqu'on calcule une union de deux ensembles dont l'un est
inclus dans l'autre. J'ai voulu m'appuyer sur cette propriété
pour optimiser [Lr0.SymbolicLookahead.union], mais ça ne marche
pas: la propriété est fausse (bug).

Tag:    DUMMY
Date:   18/07/2005
Auteur: regisgia

Test.

Tag:    BUG
Date:   17/07/2005
Auteur: fpottier

Corrigé le bug dans [SymbolicLookahead.union]. On obtient bien
à nouveau 6216 états, donc l'optimisation doit cette fois être
correcte. Le temps d'exécution est entre 6 et 7 secondes.
L'occupation mémoire dépasse 77M.

Tag:    HOP
Date:   16/07/2005
Auteur: fpottier

Terminé de modifier la construction de l'automate LR(1) pour
exploiter le pré-calcul. Ça va beaucoup plus vite qu'auparavant,
comme espéré: 6s au lieu de 44s. Le problème, c'est que le nombre
d'états de l'automate produit n'est pas le même (5748 au lieu de
6216 pour la version LIST), donc je me demande ce qui se passe.
Les automates produits sont bien les mêmes pour l'exemple facile
de Grune et Jacobs.

Tag:    PRECOMP
Date:   15/07/2005
Auteur: fpottier

À peu près terminé d'écrire le code de pré-calcul. Pas encore
modifié la construction de l'automate LR(1).

Tag:    BOOH
Date:   15/07/2005
Auteur: fpottier

Terminé un premier jet de la construction de l'automate LR(0). Pas
du tout fini, et environ dix fois plus lent qu'ocamlyacc.

Tag:    LR0
Date:   15/07/2005
Auteur: fpottier

Commencé à attaquer une construction de l'automate LR(0), en vue
de pré-calculer beaucoup de choses pour la construction LR(1).

Tag:    LIST
Date:   11/07/2005
Auteur: fpottier

Petite modification. La construction demande toujours 44s et 106M.

Tag:    SUB
Date:   11/07/2005
Auteur: fpottier

Complété les choses en supprimant des états existants lorsqu'un
nouvel état apparaît qui les subsume. On garantit ainsi que deux
états existants ne se subsument jamais. Ça diminue encore d'un
facteur 3 le nombre d'états pour la grammaire de FlowCaml, mais
ça n'accélère pas plus la construction, qui reste assez lente
(44s).

Tag:    SUBSUME
Date:   09/07/2005
Auteur: fpottier

Amélioré les choses en testant, lorsqu'on crée un état, s'il n'est
pas inclus (au sens de l'inclusion d'ensembles d'items LR(1)) dans
un état existant. Si oui, on peut reprendre l'état existant sans
créer aucun conflit. Ça diminue déjà d'un facteur 2 le nombre d'état
pour la grammaire de FlowCaml et ça accélère la construction d'un
facteur 10.

Tag:    INFINITE
Date:   08/07/2005
Auteur: fpottier

Mémorisé les transitions et réductions au cours de la construction,
au lieu de les reconstruire après. La grammaire de Flow Caml passe
en 400 secondes environ. C'est mieux mais pas encore brillant...

Tag:    PAT
Date:   08/07/2005
Auteur: fpottier

Utilisé des Patricia trees pour les ensembles d'entiers, ce qui me
permet d'utiliser une hash table pour stocker les états. Ça n'a pas
l'air de changer grand-chose, à première vue.

Tag:    EFFICACE
Date:   07/07/2005
Auteur: fpottier

Représenté les états non pas pas des ensembles d'items LR(1) mais
par des maps des items LR(0) vers des ensembles de lookahead, ce
qui devrait permettre de mieux partager ces ensembles et d'éviter
pas mal de calculs redondants. Représentés les items LR(0), qui
sont des paires d'entiers, par un unique entier, de façon à éviter
toute allocation mémoire. On semble gagner en mémoire mais ça
continue à se traîner le ventre.

Tag:    PASCLOS
Date:   07/07/2005
Auteur: fpottier

Évité de calculer de stocker les états clos dans la table. Je calcule
la clôture au vol quand c'est nécessaire, mais je ne la stocke pas.
Grâce à cela j'arrive à faire passer la grammaire de Flow Caml, ce
qui donne dans les 40000 états, alors qu'avant ça bloquait vers les
4000. Mais ça reste pas brillant.

Tag:    TEST
Date:   05/07/2005
Auteur: fpottier

Effectué quelques corrections et testé sur de vraies grammaires la
construction de l'automate LR(1). C'est vraiment, vraiment long et
ça bouffe plein de mémoire -- mes 512M ne suffisent pas. En fait,
ça ne termine pas!

Tag:    MIDDLE
Date:   04/07/2005
Auteur: fpottier

Supprimé la grammaire codée en dur dans [Grammar] et connecté le front-end
avec [Grammar], de façon à pouvoir essayer des grammaires réalistes. Pas
testé.

Tag:    PARSE
Date:   04/07/2005
Auteur: fpottier

Corrigé des problèmes dans le parser et le lexer, ajouté le module
[Front], testé un peu. Une vingtaine de fichiers .mly présents sur
ma machine sont acceptés.

Tag:    LEX
Date:   04/07/2005
Auteur: fpottier

Ajouté le module [Error] en provenance d'alphaCaml et complété le
lexer.

Tag:    YACC
Date:   04/07/2005
Auteur: fpottier

Testé la construction de l'automate sur une grammaire vissée en dur.
Ajouté un lexer (incomplet) et un parseur pour analyser les fichiers
ocamlyacc.

Tag:    SOIR
Date:   02/07/2005
Auteur: fpottier

Ajouté un peu de code.

Tag:    COUAC
Date:   02/07/2005
Auteur: fpottier

Création du projet. Début d'un code naïf de construction de l'automate LR(1).

