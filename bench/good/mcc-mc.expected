File "mcc-mc.mly", line 50, characters 27-36:
Warning: the token TokDQuote is unused.
File "mcc-mc.mly", line 58, characters 27-41:
Warning: the token TokEndLanguage is unused.
File "mcc-mc.mly", line 63, characters 43-48:
Warning: the token TokId is unused.
%{
open Fc_parse_type
open Fc_frontends

let parse_pascal buffer =
    FrontEnd.set_pascal_parsing ();
    Fc_parse_state.init_types ();
    let elist = Pasqual_parser.bootstrap Pasqual_lexer.main (Lexing.from_string buffer) in
	[PascalExpr (Fc_parse_state.current_position (), elist)]

let parse_pasqual buffer =
    FrontEnd.set_pasqual_parsing ();
    Fc_parse_state.init_types ();
    Pasqual_parser.bootstrap Pasqual_lexer.main (Lexing.from_string buffer)

let parse_fc buffer =
    FrontEnd.set_parameter_copying CopyNone;
    Fc_parse_state.init_types ();
    Fc_parse.prog Fc_lex.main (Lexing.from_string buffer)

%}
%start program
%token <string * Fc_parse_type.pos> TokString
%token <string * Fc_parse_type.pos> TokSourceString
%token <Fc_parse_type.pos> TokSource
%token <Fc_parse_type.pos> TokPasqual
%token <Fc_parse_type.pos> TokPascal
%token <Fc_parse_type.pos> TokLt
%token <Fc_parse_type.pos> TokLanguage
%token <Symbol.symbol * Fc_parse_type.pos> TokId
%token <Fc_parse_type.pos> TokGt
%token <Fc_parse_type.pos> TokFC
%token <Fc_parse_type.pos> TokEq
%token TokEof
%token <Fc_parse_type.pos> TokEndLanguage
%token <Fc_parse_type.pos> TokDQuote

%type <Fc_parse_type.expr list> program
%%

program:
| source_block_list TokEof
    { $1 }
| source_block_list
    { $1 }
| TokEof
    { [] }

source_block_list:
| source_block_list source_block
    { $1 @ $2 }
| source_block
    { $1 }

source_block:
| pascal_block
    { $1 }
| pasqual_block
    { $1 }
| fc_block
    { $1 }
| generic_block
    { $1 }

pascal_block:
| TokLt TokLanguage TokEq TokPascal TokSource TokEq TokSourceString TokGt
    { parse_pascal (fst $7) }

pasqual_block:
| TokLt TokLanguage TokEq TokPasqual TokSource TokEq TokSourceString TokGt
    { parse_pasqual (fst $7) }

fc_block:
| TokLt TokLanguage TokEq TokFC TokSource TokEq TokSourceString TokGt
    { parse_fc (fst $7) }

generic_block:
| TokLt TokLanguage TokEq TokString TokSource TokEq TokSourceString TokGt
    { match String.lowercase (fst $4) with
				      "pascal" ->
					parse_pascal (fst $7)
				    | "pasqual" ->
					parse_pasqual (fst $7)
				    | "c" | "fc" ->
					parse_fc (fst $7)
				    | _ ->
					print_string ("warning: block ignored (no front-end is found for " ^ (fst $4) ^ ")\n");
					[]
				}

%%



