Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
%start s
%token EOF
%token B
%token A

%type <int> s
%%

s:
| EOF
    {let _1 =
  ( None )
in
 0 }
| A x000 = B A EOF
    {let _1 =
  let x00 = x000 in
  let x =
    let x0 = x00 in
    let y =
      let x = x0 in
      ( x )
    in
    let x =
      ( None )
    in
    ( (x, y) )
  in
  ( Some x )
in
 0 }
| x000 = A A x100 = B A EOF
    {let _1 =
  let x10 = x100 in
  let x00 = x000 in
  let x =
    let x1 = x10 in
    let x0 = x00 in
    let y =
      let x = x1 in
      ( x )
    in
    let x =
      let x = x0 in
      ( Some x )
    in
    ( (x, y) )
  in
  ( Some x )
in
 0 }

%%



