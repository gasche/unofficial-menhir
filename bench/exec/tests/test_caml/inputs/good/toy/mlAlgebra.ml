(* This file was automatically generated by Gromit, *)
(* the type algebra compiler. Do not edit.          *)

module Term = struct

  type 'a t =

    | TBottom
    | TTop
    | TArrow of 'a * 'a
    | TPair of 'a * 'a
    | TRef of 'a * 'a
    | TVect of 'a * 'a
    | TRecord of 'a
    | TVariant of 'a
    | TInt
    | TUnit
    | TBool
    | TFloat
    | TChar
    | TString

    | TRBottom
    | TRAbsent
    | TRPresent of 'a
    | TREither of 'a
    | TRTop

    | TVAbsent
    | TVPresent of 'a
    | TVTop

  let bottom = function
    | TBottom
    | TTop
    | TArrow _
    | TPair _
    | TRef _
    | TVect _
    | TRecord _
    | TVariant _
    | TInt
    | TUnit
    | TBool
    | TFloat
    | TChar
    | TString
    -> TBottom
    | TRBottom
    | TRAbsent
    | TRPresent _
    | TREither _
    | TRTop
    -> TRBottom
    | TVAbsent
    | TVPresent _
    | TVTop
    -> TVAbsent

  let top = function
    | TBottom
    | TTop
    | TArrow _
    | TPair _
    | TRef _
    | TVect _
    | TRecord _
    | TVariant _
    | TInt
    | TUnit
    | TBool
    | TFloat
    | TChar
    | TString
    -> TTop
    | TRBottom
    | TRAbsent
    | TRPresent _
    | TREither _
    | TRTop
    -> TRTop
    | TVAbsent
    | TVPresent _
    | TVTop
    -> TVTop

  let arity = function
    | TBottom ->
        0
    | TTop ->
        0
    | TArrow _ ->
        2
    | TPair _ ->
        2
    | TRef _ ->
        2
    | TVect _ ->
        2
    | TRecord _ ->
        1
    | TVariant _ ->
        1
    | TInt ->
        0
    | TUnit ->
        0
    | TBool ->
        0
    | TFloat ->
        0
    | TChar ->
        0
    | TString ->
        0
    | TRBottom ->
        0
    | TRAbsent ->
        0
    | TRPresent _ ->
        1
    | TREither _ ->
        1
    | TRTop ->
        0
    | TVAbsent ->
        0
    | TVPresent _ ->
        1
    | TVTop ->
        0

  exception Clash

  let break action term1 term2 =
    match (term1, term2) with
    | (TBottom, TBottom) ->
        ()
    | (TBottom, TTop) ->
        ()
    | (TBottom, TArrow (domain2, range2)) ->
        ()
    | (TBottom, TPair (left2, right2)) ->
        ()
    | (TBottom, TRef (read2, write2)) ->
        ()
    | (TBottom, TVect (read2, write2)) ->
        ()
    | (TBottom, TRecord (field2)) ->
        ()
    | (TBottom, TVariant (summand2)) ->
        ()
    | (TBottom, TInt) ->
        ()
    | (TBottom, TUnit) ->
        ()
    | (TBottom, TBool) ->
        ()
    | (TBottom, TFloat) ->
        ()
    | (TBottom, TChar) ->
        ()
    | (TBottom, TString) ->
        ()
    | (TTop, TTop) ->
        ()
    | (TArrow (domain1, range1), TTop) ->
        ()
    | (TArrow (domain1, range1), TArrow (domain2, range2)) ->
        action domain2 domain1;
        action range1 range2
    | (TPair (left1, right1), TTop) ->
        ()
    | (TPair (left1, right1), TPair (left2, right2)) ->
        action left1 left2;
        action right1 right2
    | (TRef (read1, write1), TTop) ->
        ()
    | (TRef (read1, write1), TRef (read2, write2)) ->
        action read1 read2;
        action write2 write1
    | (TVect (read1, write1), TTop) ->
        ()
    | (TVect (read1, write1), TVect (read2, write2)) ->
        action read1 read2;
        action write2 write1
    | (TRecord (field1), TTop) ->
        ()
    | (TRecord (field1), TRecord (field2)) ->
        action field1 field2
    | (TVariant (summand1), TTop) ->
        ()
    | (TVariant (summand1), TVariant (summand2)) ->
        action summand1 summand2
    | (TInt, TTop) ->
        ()
    | (TInt, TInt) ->
        ()
    | (TUnit, TTop) ->
        ()
    | (TUnit, TUnit) ->
        ()
    | (TBool, TTop) ->
        ()
    | (TBool, TBool) ->
        ()
    | (TFloat, TTop) ->
        ()
    | (TFloat, TFloat) ->
        ()
    | (TChar, TTop) ->
        ()
    | (TChar, TChar) ->
        ()
    | (TString, TTop) ->
        ()
    | (TString, TString) ->
        ()
    | (TTop, TBottom)
    | (TTop, TArrow _)
    | (TTop, TPair _)
    | (TTop, TRef _)
    | (TTop, TVect _)
    | (TTop, TRecord _)
    | (TTop, TVariant _)
    | (TTop, TInt)
    | (TTop, TUnit)
    | (TTop, TBool)
    | (TTop, TFloat)
    | (TTop, TChar)
    | (TTop, TString)
    | (TArrow _, TBottom)
    | (TArrow _, TPair _)
    | (TArrow _, TRef _)
    | (TArrow _, TVect _)
    | (TArrow _, TRecord _)
    | (TArrow _, TVariant _)
    | (TArrow _, TInt)
    | (TArrow _, TUnit)
    | (TArrow _, TBool)
    | (TArrow _, TFloat)
    | (TArrow _, TChar)
    | (TArrow _, TString)
    | (TPair _, TBottom)
    | (TPair _, TArrow _)
    | (TPair _, TRef _)
    | (TPair _, TVect _)
    | (TPair _, TRecord _)
    | (TPair _, TVariant _)
    | (TPair _, TInt)
    | (TPair _, TUnit)
    | (TPair _, TBool)
    | (TPair _, TFloat)
    | (TPair _, TChar)
    | (TPair _, TString)
    | (TRef _, TBottom)
    | (TRef _, TArrow _)
    | (TRef _, TPair _)
    | (TRef _, TVect _)
    | (TRef _, TRecord _)
    | (TRef _, TVariant _)
    | (TRef _, TInt)
    | (TRef _, TUnit)
    | (TRef _, TBool)
    | (TRef _, TFloat)
    | (TRef _, TChar)
    | (TRef _, TString)
    | (TVect _, TBottom)
    | (TVect _, TArrow _)
    | (TVect _, TPair _)
    | (TVect _, TRef _)
    | (TVect _, TRecord _)
    | (TVect _, TVariant _)
    | (TVect _, TInt)
    | (TVect _, TUnit)
    | (TVect _, TBool)
    | (TVect _, TFloat)
    | (TVect _, TChar)
    | (TVect _, TString)
    | (TRecord _, TBottom)
    | (TRecord _, TArrow _)
    | (TRecord _, TPair _)
    | (TRecord _, TRef _)
    | (TRecord _, TVect _)
    | (TRecord _, TVariant _)
    | (TRecord _, TInt)
    | (TRecord _, TUnit)
    | (TRecord _, TBool)
    | (TRecord _, TFloat)
    | (TRecord _, TChar)
    | (TRecord _, TString)
    | (TVariant _, TBottom)
    | (TVariant _, TArrow _)
    | (TVariant _, TPair _)
    | (TVariant _, TRef _)
    | (TVariant _, TVect _)
    | (TVariant _, TRecord _)
    | (TVariant _, TInt)
    | (TVariant _, TUnit)
    | (TVariant _, TBool)
    | (TVariant _, TFloat)
    | (TVariant _, TChar)
    | (TVariant _, TString)
    | (TInt, TBottom)
    | (TInt, TArrow _)
    | (TInt, TPair _)
    | (TInt, TRef _)
    | (TInt, TVect _)
    | (TInt, TRecord _)
    | (TInt, TVariant _)
    | (TInt, TUnit)
    | (TInt, TBool)
    | (TInt, TFloat)
    | (TInt, TChar)
    | (TInt, TString)
    | (TUnit, TBottom)
    | (TUnit, TArrow _)
    | (TUnit, TPair _)
    | (TUnit, TRef _)
    | (TUnit, TVect _)
    | (TUnit, TRecord _)
    | (TUnit, TVariant _)
    | (TUnit, TInt)
    | (TUnit, TBool)
    | (TUnit, TFloat)
    | (TUnit, TChar)
    | (TUnit, TString)
    | (TBool, TBottom)
    | (TBool, TArrow _)
    | (TBool, TPair _)
    | (TBool, TRef _)
    | (TBool, TVect _)
    | (TBool, TRecord _)
    | (TBool, TVariant _)
    | (TBool, TInt)
    | (TBool, TUnit)
    | (TBool, TFloat)
    | (TBool, TChar)
    | (TBool, TString)
    | (TFloat, TBottom)
    | (TFloat, TArrow _)
    | (TFloat, TPair _)
    | (TFloat, TRef _)
    | (TFloat, TVect _)
    | (TFloat, TRecord _)
    | (TFloat, TVariant _)
    | (TFloat, TInt)
    | (TFloat, TUnit)
    | (TFloat, TBool)
    | (TFloat, TChar)
    | (TFloat, TString)
    | (TChar, TBottom)
    | (TChar, TArrow _)
    | (TChar, TPair _)
    | (TChar, TRef _)
    | (TChar, TVect _)
    | (TChar, TRecord _)
    | (TChar, TVariant _)
    | (TChar, TInt)
    | (TChar, TUnit)
    | (TChar, TBool)
    | (TChar, TFloat)
    | (TChar, TString)
    | (TString, TBottom)
    | (TString, TArrow _)
    | (TString, TPair _)
    | (TString, TRef _)
    | (TString, TVect _)
    | (TString, TRecord _)
    | (TString, TVariant _)
    | (TString, TInt)
    | (TString, TUnit)
    | (TString, TBool)
    | (TString, TFloat)
    | (TString, TChar)
    -> raise Clash

    | (TRBottom, TRBottom) ->
        ()
    | (TRBottom, TRAbsent) ->
        ()
    | (TRBottom, TRPresent (contents2)) ->
        ()
    | (TRBottom, TREither (contents2)) ->
        ()
    | (TRBottom, TRTop) ->
        ()
    | (TRAbsent, TRAbsent) ->
        ()
    | (TRAbsent, TREither (contents2)) ->
        ()
    | (TRAbsent, TRTop) ->
        ()
    | (TRPresent (contents1), TRPresent (contents2)) ->
        action contents1 contents2
    | (TRPresent (contents1), TREither (contents2)) ->
        action contents1 contents2
    | (TRPresent (contents1), TRTop) ->
        ()
    | (TREither (contents1), TREither (contents2)) ->
        action contents1 contents2
    | (TREither (contents1), TRTop) ->
        ()
    | (TRTop, TRTop) ->
        ()
    | (TRAbsent, TRBottom)
    | (TRAbsent, TRPresent _)
    | (TRPresent _, TRBottom)
    | (TRPresent _, TRAbsent)
    | (TREither _, TRBottom)
    | (TREither _, TRAbsent)
    | (TREither _, TRPresent _)
    | (TRTop, TRBottom)
    | (TRTop, TRAbsent)
    | (TRTop, TRPresent _)
    | (TRTop, TREither _)
    -> raise Clash

    | (TVAbsent, TVAbsent) ->
        ()
    | (TVAbsent, TVPresent (argument2)) ->
        ()
    | (TVAbsent, TVTop) ->
        ()
    | (TVPresent (argument1), TVPresent (argument2)) ->
        action argument1 argument2
    | (TVPresent (argument1), TVTop) ->
        ()
    | (TVTop, TVTop) ->
        ()
    | (TVPresent _, TVAbsent)
    | (TVTop, TVAbsent)
    | (TVTop, TVPresent _)
    -> raise Clash

    | (_, _) ->
        assert false

  let sbreak action term1 term2 =
    match (term1, term2) with
    | (TBottom, TBottom) ->
        ()
    | (TBottom, TTop) ->
        ()
    | (TBottom, TArrow (domain2, range2)) ->
        ()
    | (TBottom, TPair (left2, right2)) ->
        ()
    | (TBottom, TRef (read2, write2)) ->
        ()
    | (TBottom, TVect (read2, write2)) ->
        ()
    | (TBottom, TRecord (field2)) ->
        ()
    | (TBottom, TVariant (summand2)) ->
        ()
    | (TBottom, TInt) ->
        ()
    | (TBottom, TUnit) ->
        ()
    | (TBottom, TBool) ->
        ()
    | (TBottom, TFloat) ->
        ()
    | (TBottom, TChar) ->
        ()
    | (TBottom, TString) ->
        ()
    | (TTop, TTop) ->
        ()
    | (TArrow (domain1, range1), TTop) ->
        ()
    | (TArrow (domain1, range1), TArrow (domain2, range2)) ->
        action false domain2 domain1;
        action true range1 range2
    | (TPair (left1, right1), TTop) ->
        ()
    | (TPair (left1, right1), TPair (left2, right2)) ->
        action true left1 left2;
        action true right1 right2
    | (TRef (read1, write1), TTop) ->
        ()
    | (TRef (read1, write1), TRef (read2, write2)) ->
        action true read1 read2;
        action false write2 write1
    | (TVect (read1, write1), TTop) ->
        ()
    | (TVect (read1, write1), TVect (read2, write2)) ->
        action true read1 read2;
        action false write2 write1
    | (TRecord (field1), TTop) ->
        ()
    | (TRecord (field1), TRecord (field2)) ->
        action true field1 field2
    | (TVariant (summand1), TTop) ->
        ()
    | (TVariant (summand1), TVariant (summand2)) ->
        action true summand1 summand2
    | (TInt, TTop) ->
        ()
    | (TInt, TInt) ->
        ()
    | (TUnit, TTop) ->
        ()
    | (TUnit, TUnit) ->
        ()
    | (TBool, TTop) ->
        ()
    | (TBool, TBool) ->
        ()
    | (TFloat, TTop) ->
        ()
    | (TFloat, TFloat) ->
        ()
    | (TChar, TTop) ->
        ()
    | (TChar, TChar) ->
        ()
    | (TString, TTop) ->
        ()
    | (TString, TString) ->
        ()
    | (TTop, TBottom)
    | (TTop, TArrow _)
    | (TTop, TPair _)
    | (TTop, TRef _)
    | (TTop, TVect _)
    | (TTop, TRecord _)
    | (TTop, TVariant _)
    | (TTop, TInt)
    | (TTop, TUnit)
    | (TTop, TBool)
    | (TTop, TFloat)
    | (TTop, TChar)
    | (TTop, TString)
    | (TArrow _, TBottom)
    | (TArrow _, TPair _)
    | (TArrow _, TRef _)
    | (TArrow _, TVect _)
    | (TArrow _, TRecord _)
    | (TArrow _, TVariant _)
    | (TArrow _, TInt)
    | (TArrow _, TUnit)
    | (TArrow _, TBool)
    | (TArrow _, TFloat)
    | (TArrow _, TChar)
    | (TArrow _, TString)
    | (TPair _, TBottom)
    | (TPair _, TArrow _)
    | (TPair _, TRef _)
    | (TPair _, TVect _)
    | (TPair _, TRecord _)
    | (TPair _, TVariant _)
    | (TPair _, TInt)
    | (TPair _, TUnit)
    | (TPair _, TBool)
    | (TPair _, TFloat)
    | (TPair _, TChar)
    | (TPair _, TString)
    | (TRef _, TBottom)
    | (TRef _, TArrow _)
    | (TRef _, TPair _)
    | (TRef _, TVect _)
    | (TRef _, TRecord _)
    | (TRef _, TVariant _)
    | (TRef _, TInt)
    | (TRef _, TUnit)
    | (TRef _, TBool)
    | (TRef _, TFloat)
    | (TRef _, TChar)
    | (TRef _, TString)
    | (TVect _, TBottom)
    | (TVect _, TArrow _)
    | (TVect _, TPair _)
    | (TVect _, TRef _)
    | (TVect _, TRecord _)
    | (TVect _, TVariant _)
    | (TVect _, TInt)
    | (TVect _, TUnit)
    | (TVect _, TBool)
    | (TVect _, TFloat)
    | (TVect _, TChar)
    | (TVect _, TString)
    | (TRecord _, TBottom)
    | (TRecord _, TArrow _)
    | (TRecord _, TPair _)
    | (TRecord _, TRef _)
    | (TRecord _, TVect _)
    | (TRecord _, TVariant _)
    | (TRecord _, TInt)
    | (TRecord _, TUnit)
    | (TRecord _, TBool)
    | (TRecord _, TFloat)
    | (TRecord _, TChar)
    | (TRecord _, TString)
    | (TVariant _, TBottom)
    | (TVariant _, TArrow _)
    | (TVariant _, TPair _)
    | (TVariant _, TRef _)
    | (TVariant _, TVect _)
    | (TVariant _, TRecord _)
    | (TVariant _, TInt)
    | (TVariant _, TUnit)
    | (TVariant _, TBool)
    | (TVariant _, TFloat)
    | (TVariant _, TChar)
    | (TVariant _, TString)
    | (TInt, TBottom)
    | (TInt, TArrow _)
    | (TInt, TPair _)
    | (TInt, TRef _)
    | (TInt, TVect _)
    | (TInt, TRecord _)
    | (TInt, TVariant _)
    | (TInt, TUnit)
    | (TInt, TBool)
    | (TInt, TFloat)
    | (TInt, TChar)
    | (TInt, TString)
    | (TUnit, TBottom)
    | (TUnit, TArrow _)
    | (TUnit, TPair _)
    | (TUnit, TRef _)
    | (TUnit, TVect _)
    | (TUnit, TRecord _)
    | (TUnit, TVariant _)
    | (TUnit, TInt)
    | (TUnit, TBool)
    | (TUnit, TFloat)
    | (TUnit, TChar)
    | (TUnit, TString)
    | (TBool, TBottom)
    | (TBool, TArrow _)
    | (TBool, TPair _)
    | (TBool, TRef _)
    | (TBool, TVect _)
    | (TBool, TRecord _)
    | (TBool, TVariant _)
    | (TBool, TInt)
    | (TBool, TUnit)
    | (TBool, TFloat)
    | (TBool, TChar)
    | (TBool, TString)
    | (TFloat, TBottom)
    | (TFloat, TArrow _)
    | (TFloat, TPair _)
    | (TFloat, TRef _)
    | (TFloat, TVect _)
    | (TFloat, TRecord _)
    | (TFloat, TVariant _)
    | (TFloat, TInt)
    | (TFloat, TUnit)
    | (TFloat, TBool)
    | (TFloat, TChar)
    | (TFloat, TString)
    | (TChar, TBottom)
    | (TChar, TArrow _)
    | (TChar, TPair _)
    | (TChar, TRef _)
    | (TChar, TVect _)
    | (TChar, TRecord _)
    | (TChar, TVariant _)
    | (TChar, TInt)
    | (TChar, TUnit)
    | (TChar, TBool)
    | (TChar, TFloat)
    | (TChar, TString)
    | (TString, TBottom)
    | (TString, TArrow _)
    | (TString, TPair _)
    | (TString, TRef _)
    | (TString, TVect _)
    | (TString, TRecord _)
    | (TString, TVariant _)
    | (TString, TInt)
    | (TString, TUnit)
    | (TString, TBool)
    | (TString, TFloat)
    | (TString, TChar)
    -> raise Clash

    | (TRBottom, TRBottom) ->
        ()
    | (TRBottom, TRAbsent) ->
        ()
    | (TRBottom, TRPresent (contents2)) ->
        ()
    | (TRBottom, TREither (contents2)) ->
        ()
    | (TRBottom, TRTop) ->
        ()
    | (TRAbsent, TRAbsent) ->
        ()
    | (TRAbsent, TREither (contents2)) ->
        ()
    | (TRAbsent, TRTop) ->
        ()
    | (TRPresent (contents1), TRPresent (contents2)) ->
        action true contents1 contents2
    | (TRPresent (contents1), TREither (contents2)) ->
        action true contents1 contents2
    | (TRPresent (contents1), TRTop) ->
        ()
    | (TREither (contents1), TREither (contents2)) ->
        action true contents1 contents2
    | (TREither (contents1), TRTop) ->
        ()
    | (TRTop, TRTop) ->
        ()
    | (TRAbsent, TRBottom)
    | (TRAbsent, TRPresent _)
    | (TRPresent _, TRBottom)
    | (TRPresent _, TRAbsent)
    | (TREither _, TRBottom)
    | (TREither _, TRAbsent)
    | (TREither _, TRPresent _)
    | (TRTop, TRBottom)
    | (TRTop, TRAbsent)
    | (TRTop, TRPresent _)
    | (TRTop, TREither _)
    -> raise Clash

    | (TVAbsent, TVAbsent) ->
        ()
    | (TVAbsent, TVPresent (argument2)) ->
        ()
    | (TVAbsent, TVTop) ->
        ()
    | (TVPresent (argument1), TVPresent (argument2)) ->
        action true argument1 argument2
    | (TVPresent (argument1), TVTop) ->
        ()
    | (TVTop, TVTop) ->
        ()
    | (TVPresent _, TVAbsent)
    | (TVTop, TVAbsent)
    | (TVTop, TVPresent _)
    -> raise Clash

    | (_, _) ->
        assert false

  let iter action term =
    match term with
    | TBottom ->
        ()
    | TTop ->
        ()
    | TArrow (domain, range) ->
        action domain;
        action range
    | TPair (left, right) ->
        action left;
        action right
    | TRef (read, write) ->
        action read;
        action write
    | TVect (read, write) ->
        action read;
        action write
    | TRecord (field) ->
        action field
    | TVariant (summand) ->
        action summand
    | TInt ->
        ()
    | TUnit ->
        ()
    | TBool ->
        ()
    | TFloat ->
        ()
    | TChar ->
        ()
    | TString ->
        ()

    | TRBottom ->
        ()
    | TRAbsent ->
        ()
    | TRPresent (contents) ->
        action contents
    | TREither (contents) ->
        action contents
    | TRTop ->
        ()

    | TVAbsent ->
        ()
    | TVPresent (argument) ->
        action argument
    | TVTop ->
        ()

  let fold action term accu =
    match term with
    | TBottom ->
        accu
    | TTop ->
        accu
    | TArrow (domain, range) ->
        let accu = action domain accu in
        let accu = action range accu in
        accu
    | TPair (left, right) ->
        let accu = action left accu in
        let accu = action right accu in
        accu
    | TRef (read, write) ->
        let accu = action read accu in
        let accu = action write accu in
        accu
    | TVect (read, write) ->
        let accu = action read accu in
        let accu = action write accu in
        accu
    | TRecord (field) ->
        let accu = action field accu in
        accu
    | TVariant (summand) ->
        let accu = action summand accu in
        accu
    | TInt ->
        accu
    | TUnit ->
        accu
    | TBool ->
        accu
    | TFloat ->
        accu
    | TChar ->
        accu
    | TString ->
        accu

    | TRBottom ->
        accu
    | TRAbsent ->
        accu
    | TRPresent (contents) ->
        let accu = action contents accu in
        accu
    | TREither (contents) ->
        let accu = action contents accu in
        accu
    | TRTop ->
        accu

    | TVAbsent ->
        accu
    | TVPresent (argument) ->
        let accu = action argument accu in
        accu
    | TVTop ->
        accu

  let siter action sign term =
    match term with
    | TBottom ->
        ()
    | TTop ->
        ()
    | TArrow (domain, range) ->
        action (not sign) domain;
        action sign range
    | TPair (left, right) ->
        action sign left;
        action sign right
    | TRef (read, write) ->
        action sign read;
        action (not sign) write
    | TVect (read, write) ->
        action sign read;
        action (not sign) write
    | TRecord (field) ->
        action sign field
    | TVariant (summand) ->
        action sign summand
    | TInt ->
        ()
    | TUnit ->
        ()
    | TBool ->
        ()
    | TFloat ->
        ()
    | TChar ->
        ()
    | TString ->
        ()

    | TRBottom ->
        ()
    | TRAbsent ->
        ()
    | TRPresent (contents) ->
        action sign contents
    | TREither (contents) ->
        action sign contents
    | TRTop ->
        ()

    | TVAbsent ->
        ()
    | TVPresent (argument) ->
        action sign argument
    | TVTop ->
        ()

  let sfold action sign term accu =
    match term with
    | TBottom ->
        accu
    | TTop ->
        accu
    | TArrow (domain, range) ->
        let accu = action (not sign) domain accu in
        let accu = action sign range accu in
        accu
    | TPair (left, right) ->
        let accu = action sign left accu in
        let accu = action sign right accu in
        accu
    | TRef (read, write) ->
        let accu = action sign read accu in
        let accu = action (not sign) write accu in
        accu
    | TVect (read, write) ->
        let accu = action sign read accu in
        let accu = action (not sign) write accu in
        accu
    | TRecord (field) ->
        let accu = action sign field accu in
        accu
    | TVariant (summand) ->
        let accu = action sign summand accu in
        accu
    | TInt ->
        accu
    | TUnit ->
        accu
    | TBool ->
        accu
    | TFloat ->
        accu
    | TChar ->
        accu
    | TString ->
        accu

    | TRBottom ->
        accu
    | TRAbsent ->
        accu
    | TRPresent (contents) ->
        let accu = action sign contents accu in
        accu
    | TREither (contents) ->
        let accu = action sign contents accu in
        accu
    | TRTop ->
        accu

    | TVAbsent ->
        accu
    | TVPresent (argument) ->
        let accu = action sign argument accu in
        accu
    | TVTop ->
        accu

  let map f = function
    | TBottom ->
        TBottom
    | TTop ->
        TTop
    | TArrow (domain, range) ->
        TArrow (f domain, f range)
    | TPair (left, right) ->
        TPair (f left, f right)
    | TRef (read, write) ->
        TRef (f read, f write)
    | TVect (read, write) ->
        TVect (f read, f write)
    | TRecord (field) ->
        TRecord (f field)
    | TVariant (summand) ->
        TVariant (f summand)
    | TInt ->
        TInt
    | TUnit ->
        TUnit
    | TBool ->
        TBool
    | TFloat ->
        TFloat
    | TChar ->
        TChar
    | TString ->
        TString
    | TRBottom ->
        TRBottom
    | TRAbsent ->
        TRAbsent
    | TRPresent (contents) ->
        TRPresent (f contents)
    | TREither (contents) ->
        TREither (f contents)
    | TRTop ->
        TRTop
    | TVAbsent ->
        TVAbsent
    | TVPresent (argument) ->
        TVPresent (f argument)
    | TVTop ->
        TVTop

  let endo_map f term =
    match term with
    | TBottom ->
        TBottom
    | TTop ->
        TTop
    | TArrow (domain, range) ->
        let domain' = f domain in
        let range' = f range in
        if (domain' == domain) & (range' == range) then
          term
        else
          TArrow (domain', range')
    | TPair (left, right) ->
        let left' = f left in
        let right' = f right in
        if (left' == left) & (right' == right) then
          term
        else
          TPair (left', right')
    | TRef (read, write) ->
        let read' = f read in
        let write' = f write in
        if (read' == read) & (write' == write) then
          term
        else
          TRef (read', write')
    | TVect (read, write) ->
        let read' = f read in
        let write' = f write in
        if (read' == read) & (write' == write) then
          term
        else
          TVect (read', write')
    | TRecord (field) ->
        let field' = f field in
        if (field' == field) then
          term
        else
          TRecord (field')
    | TVariant (summand) ->
        let summand' = f summand in
        if (summand' == summand) then
          term
        else
          TVariant (summand')
    | TInt ->
        TInt
    | TUnit ->
        TUnit
    | TBool ->
        TBool
    | TFloat ->
        TFloat
    | TChar ->
        TChar
    | TString ->
        TString
    | TRBottom ->
        TRBottom
    | TRAbsent ->
        TRAbsent
    | TRPresent (contents) ->
        let contents' = f contents in
        if (contents' == contents) then
          term
        else
          TRPresent (contents')
    | TREither (contents) ->
        let contents' = f contents in
        if (contents' == contents) then
          term
        else
          TREither (contents')
    | TRTop ->
        TRTop
    | TVAbsent ->
        TVAbsent
    | TVPresent (argument) ->
        let argument' = f argument in
        if (argument' == argument) then
          term
        else
          TVPresent (argument')
    | TVTop ->
        TVTop

  let smap f sign = function
    | TBottom ->
        TBottom
    | TTop ->
        TTop
    | TArrow (domain, range) ->
        TArrow (f (not sign) domain, f sign range)
    | TPair (left, right) ->
        TPair (f sign left, f sign right)
    | TRef (read, write) ->
        TRef (f sign read, f (not sign) write)
    | TVect (read, write) ->
        TVect (f sign read, f (not sign) write)
    | TRecord (field) ->
        TRecord (f sign field)
    | TVariant (summand) ->
        TVariant (f sign summand)
    | TInt ->
        TInt
    | TUnit ->
        TUnit
    | TBool ->
        TBool
    | TFloat ->
        TFloat
    | TChar ->
        TChar
    | TString ->
        TString
    | TRBottom ->
        TRBottom
    | TRAbsent ->
        TRAbsent
    | TRPresent (contents) ->
        TRPresent (f sign contents)
    | TREither (contents) ->
        TREither (f sign contents)
    | TRTop ->
        TRTop
    | TVAbsent ->
        TVAbsent
    | TVPresent (argument) ->
        TVPresent (f sign argument)
    | TVTop ->
        TVTop

  let glb leaf_glb leaf_lub term1 term2 =
    match (term1, term2) with

    | (TBottom, TBottom) ->
        term1
    | (TBottom, TTop) ->
        term1
    | (TBottom, TArrow (domain2, range2)) ->
        term1
    | (TBottom, TPair (left2, right2)) ->
        term1
    | (TBottom, TRef (read2, write2)) ->
        term1
    | (TBottom, TVect (read2, write2)) ->
        term1
    | (TBottom, TRecord (field2)) ->
        term1
    | (TBottom, TVariant (summand2)) ->
        term1
    | (TBottom, TInt) ->
        term1
    | (TBottom, TUnit) ->
        term1
    | (TBottom, TBool) ->
        term1
    | (TBottom, TFloat) ->
        term1
    | (TBottom, TChar) ->
        term1
    | (TBottom, TString) ->
        term1
    | (TTop, TBottom) ->
        term2
    | (TTop, TTop) ->
        term1
    | (TTop, TArrow (domain2, range2)) ->
        term2
    | (TTop, TPair (left2, right2)) ->
        term2
    | (TTop, TRef (read2, write2)) ->
        term2
    | (TTop, TVect (read2, write2)) ->
        term2
    | (TTop, TRecord (field2)) ->
        term2
    | (TTop, TVariant (summand2)) ->
        term2
    | (TTop, TInt) ->
        term2
    | (TTop, TUnit) ->
        term2
    | (TTop, TBool) ->
        term2
    | (TTop, TFloat) ->
        term2
    | (TTop, TChar) ->
        term2
    | (TTop, TString) ->
        term2
    | (TArrow (domain1, range1), TBottom) ->
        term2
    | (TArrow (domain1, range1), TTop) ->
        term1
    | (TArrow (domain1, range1), TArrow (domain2, range2)) ->
        TArrow (leaf_lub domain1 domain2, leaf_glb range1 range2)
    | (TArrow (domain1, range1), TPair (left2, right2)) ->
        TBottom
    | (TArrow (domain1, range1), TRef (read2, write2)) ->
        TBottom
    | (TArrow (domain1, range1), TVect (read2, write2)) ->
        TBottom
    | (TArrow (domain1, range1), TRecord (field2)) ->
        TBottom
    | (TArrow (domain1, range1), TVariant (summand2)) ->
        TBottom
    | (TArrow (domain1, range1), TInt) ->
        TBottom
    | (TArrow (domain1, range1), TUnit) ->
        TBottom
    | (TArrow (domain1, range1), TBool) ->
        TBottom
    | (TArrow (domain1, range1), TFloat) ->
        TBottom
    | (TArrow (domain1, range1), TChar) ->
        TBottom
    | (TArrow (domain1, range1), TString) ->
        TBottom
    | (TPair (left1, right1), TBottom) ->
        term2
    | (TPair (left1, right1), TTop) ->
        term1
    | (TPair (left1, right1), TArrow (domain2, range2)) ->
        TBottom
    | (TPair (left1, right1), TPair (left2, right2)) ->
        TPair (leaf_glb left1 left2, leaf_glb right1 right2)
    | (TPair (left1, right1), TRef (read2, write2)) ->
        TBottom
    | (TPair (left1, right1), TVect (read2, write2)) ->
        TBottom
    | (TPair (left1, right1), TRecord (field2)) ->
        TBottom
    | (TPair (left1, right1), TVariant (summand2)) ->
        TBottom
    | (TPair (left1, right1), TInt) ->
        TBottom
    | (TPair (left1, right1), TUnit) ->
        TBottom
    | (TPair (left1, right1), TBool) ->
        TBottom
    | (TPair (left1, right1), TFloat) ->
        TBottom
    | (TPair (left1, right1), TChar) ->
        TBottom
    | (TPair (left1, right1), TString) ->
        TBottom
    | (TRef (read1, write1), TBottom) ->
        term2
    | (TRef (read1, write1), TTop) ->
        term1
    | (TRef (read1, write1), TArrow (domain2, range2)) ->
        TBottom
    | (TRef (read1, write1), TPair (left2, right2)) ->
        TBottom
    | (TRef (read1, write1), TRef (read2, write2)) ->
        TRef (leaf_glb read1 read2, leaf_lub write1 write2)
    | (TRef (read1, write1), TVect (read2, write2)) ->
        TBottom
    | (TRef (read1, write1), TRecord (field2)) ->
        TBottom
    | (TRef (read1, write1), TVariant (summand2)) ->
        TBottom
    | (TRef (read1, write1), TInt) ->
        TBottom
    | (TRef (read1, write1), TUnit) ->
        TBottom
    | (TRef (read1, write1), TBool) ->
        TBottom
    | (TRef (read1, write1), TFloat) ->
        TBottom
    | (TRef (read1, write1), TChar) ->
        TBottom
    | (TRef (read1, write1), TString) ->
        TBottom
    | (TVect (read1, write1), TBottom) ->
        term2
    | (TVect (read1, write1), TTop) ->
        term1
    | (TVect (read1, write1), TArrow (domain2, range2)) ->
        TBottom
    | (TVect (read1, write1), TPair (left2, right2)) ->
        TBottom
    | (TVect (read1, write1), TRef (read2, write2)) ->
        TBottom
    | (TVect (read1, write1), TVect (read2, write2)) ->
        TVect (leaf_glb read1 read2, leaf_lub write1 write2)
    | (TVect (read1, write1), TRecord (field2)) ->
        TBottom
    | (TVect (read1, write1), TVariant (summand2)) ->
        TBottom
    | (TVect (read1, write1), TInt) ->
        TBottom
    | (TVect (read1, write1), TUnit) ->
        TBottom
    | (TVect (read1, write1), TBool) ->
        TBottom
    | (TVect (read1, write1), TFloat) ->
        TBottom
    | (TVect (read1, write1), TChar) ->
        TBottom
    | (TVect (read1, write1), TString) ->
        TBottom
    | (TRecord (field1), TBottom) ->
        term2
    | (TRecord (field1), TTop) ->
        term1
    | (TRecord (field1), TArrow (domain2, range2)) ->
        TBottom
    | (TRecord (field1), TPair (left2, right2)) ->
        TBottom
    | (TRecord (field1), TRef (read2, write2)) ->
        TBottom
    | (TRecord (field1), TVect (read2, write2)) ->
        TBottom
    | (TRecord (field1), TRecord (field2)) ->
        TRecord (leaf_glb field1 field2)
    | (TRecord (field1), TVariant (summand2)) ->
        TBottom
    | (TRecord (field1), TInt) ->
        TBottom
    | (TRecord (field1), TUnit) ->
        TBottom
    | (TRecord (field1), TBool) ->
        TBottom
    | (TRecord (field1), TFloat) ->
        TBottom
    | (TRecord (field1), TChar) ->
        TBottom
    | (TRecord (field1), TString) ->
        TBottom
    | (TVariant (summand1), TBottom) ->
        term2
    | (TVariant (summand1), TTop) ->
        term1
    | (TVariant (summand1), TArrow (domain2, range2)) ->
        TBottom
    | (TVariant (summand1), TPair (left2, right2)) ->
        TBottom
    | (TVariant (summand1), TRef (read2, write2)) ->
        TBottom
    | (TVariant (summand1), TVect (read2, write2)) ->
        TBottom
    | (TVariant (summand1), TRecord (field2)) ->
        TBottom
    | (TVariant (summand1), TVariant (summand2)) ->
        TVariant (leaf_glb summand1 summand2)
    | (TVariant (summand1), TInt) ->
        TBottom
    | (TVariant (summand1), TUnit) ->
        TBottom
    | (TVariant (summand1), TBool) ->
        TBottom
    | (TVariant (summand1), TFloat) ->
        TBottom
    | (TVariant (summand1), TChar) ->
        TBottom
    | (TVariant (summand1), TString) ->
        TBottom
    | (TInt, TBottom) ->
        term2
    | (TInt, TTop) ->
        term1
    | (TInt, TArrow (domain2, range2)) ->
        TBottom
    | (TInt, TPair (left2, right2)) ->
        TBottom
    | (TInt, TRef (read2, write2)) ->
        TBottom
    | (TInt, TVect (read2, write2)) ->
        TBottom
    | (TInt, TRecord (field2)) ->
        TBottom
    | (TInt, TVariant (summand2)) ->
        TBottom
    | (TInt, TInt) ->
        term1
    | (TInt, TUnit) ->
        TBottom
    | (TInt, TBool) ->
        TBottom
    | (TInt, TFloat) ->
        TBottom
    | (TInt, TChar) ->
        TBottom
    | (TInt, TString) ->
        TBottom
    | (TUnit, TBottom) ->
        term2
    | (TUnit, TTop) ->
        term1
    | (TUnit, TArrow (domain2, range2)) ->
        TBottom
    | (TUnit, TPair (left2, right2)) ->
        TBottom
    | (TUnit, TRef (read2, write2)) ->
        TBottom
    | (TUnit, TVect (read2, write2)) ->
        TBottom
    | (TUnit, TRecord (field2)) ->
        TBottom
    | (TUnit, TVariant (summand2)) ->
        TBottom
    | (TUnit, TInt) ->
        TBottom
    | (TUnit, TUnit) ->
        term1
    | (TUnit, TBool) ->
        TBottom
    | (TUnit, TFloat) ->
        TBottom
    | (TUnit, TChar) ->
        TBottom
    | (TUnit, TString) ->
        TBottom
    | (TBool, TBottom) ->
        term2
    | (TBool, TTop) ->
        term1
    | (TBool, TArrow (domain2, range2)) ->
        TBottom
    | (TBool, TPair (left2, right2)) ->
        TBottom
    | (TBool, TRef (read2, write2)) ->
        TBottom
    | (TBool, TVect (read2, write2)) ->
        TBottom
    | (TBool, TRecord (field2)) ->
        TBottom
    | (TBool, TVariant (summand2)) ->
        TBottom
    | (TBool, TInt) ->
        TBottom
    | (TBool, TUnit) ->
        TBottom
    | (TBool, TBool) ->
        term1
    | (TBool, TFloat) ->
        TBottom
    | (TBool, TChar) ->
        TBottom
    | (TBool, TString) ->
        TBottom
    | (TFloat, TBottom) ->
        term2
    | (TFloat, TTop) ->
        term1
    | (TFloat, TArrow (domain2, range2)) ->
        TBottom
    | (TFloat, TPair (left2, right2)) ->
        TBottom
    | (TFloat, TRef (read2, write2)) ->
        TBottom
    | (TFloat, TVect (read2, write2)) ->
        TBottom
    | (TFloat, TRecord (field2)) ->
        TBottom
    | (TFloat, TVariant (summand2)) ->
        TBottom
    | (TFloat, TInt) ->
        TBottom
    | (TFloat, TUnit) ->
        TBottom
    | (TFloat, TBool) ->
        TBottom
    | (TFloat, TFloat) ->
        term1
    | (TFloat, TChar) ->
        TBottom
    | (TFloat, TString) ->
        TBottom
    | (TChar, TBottom) ->
        term2
    | (TChar, TTop) ->
        term1
    | (TChar, TArrow (domain2, range2)) ->
        TBottom
    | (TChar, TPair (left2, right2)) ->
        TBottom
    | (TChar, TRef (read2, write2)) ->
        TBottom
    | (TChar, TVect (read2, write2)) ->
        TBottom
    | (TChar, TRecord (field2)) ->
        TBottom
    | (TChar, TVariant (summand2)) ->
        TBottom
    | (TChar, TInt) ->
        TBottom
    | (TChar, TUnit) ->
        TBottom
    | (TChar, TBool) ->
        TBottom
    | (TChar, TFloat) ->
        TBottom
    | (TChar, TChar) ->
        term1
    | (TChar, TString) ->
        TBottom
    | (TString, TBottom) ->
        term2
    | (TString, TTop) ->
        term1
    | (TString, TArrow (domain2, range2)) ->
        TBottom
    | (TString, TPair (left2, right2)) ->
        TBottom
    | (TString, TRef (read2, write2)) ->
        TBottom
    | (TString, TVect (read2, write2)) ->
        TBottom
    | (TString, TRecord (field2)) ->
        TBottom
    | (TString, TVariant (summand2)) ->
        TBottom
    | (TString, TInt) ->
        TBottom
    | (TString, TUnit) ->
        TBottom
    | (TString, TBool) ->
        TBottom
    | (TString, TFloat) ->
        TBottom
    | (TString, TChar) ->
        TBottom
    | (TString, TString) ->
        term1

    | (TRBottom, TRBottom) ->
        term1
    | (TRBottom, TRAbsent) ->
        term1
    | (TRBottom, TRPresent (contents2)) ->
        term1
    | (TRBottom, TREither (contents2)) ->
        term1
    | (TRBottom, TRTop) ->
        term1
    | (TRAbsent, TRBottom) ->
        term2
    | (TRAbsent, TRAbsent) ->
        term1
    | (TRAbsent, TRPresent (contents2)) ->
        TRBottom
    | (TRAbsent, TREither (contents2)) ->
        term1
    | (TRAbsent, TRTop) ->
        term1
    | (TRPresent (contents1), TRBottom) ->
        term2
    | (TRPresent (contents1), TRAbsent) ->
        TRBottom
    | (TRPresent (contents1), TRPresent (contents2)) ->
        TRPresent (leaf_glb contents1 contents2)
    | (TRPresent (contents1), TREither (contents2)) ->
        TRPresent (leaf_glb contents1 contents2)
    | (TRPresent (contents1), TRTop) ->
        term1
    | (TREither (contents1), TRBottom) ->
        term2
    | (TREither (contents1), TRAbsent) ->
        term2
    | (TREither (contents1), TRPresent (contents2)) ->
        TRPresent (leaf_glb contents1 contents2)
    | (TREither (contents1), TREither (contents2)) ->
        TREither (leaf_glb contents1 contents2)
    | (TREither (contents1), TRTop) ->
        term1
    | (TRTop, TRBottom) ->
        term2
    | (TRTop, TRAbsent) ->
        term2
    | (TRTop, TRPresent (contents2)) ->
        term2
    | (TRTop, TREither (contents2)) ->
        term2
    | (TRTop, TRTop) ->
        term1

    | (TVAbsent, TVAbsent) ->
        term1
    | (TVAbsent, TVPresent (argument2)) ->
        term1
    | (TVAbsent, TVTop) ->
        term1
    | (TVPresent (argument1), TVAbsent) ->
        term2
    | (TVPresent (argument1), TVPresent (argument2)) ->
        TVPresent (leaf_glb argument1 argument2)
    | (TVPresent (argument1), TVTop) ->
        term1
    | (TVTop, TVAbsent) ->
        term2
    | (TVTop, TVPresent (argument2)) ->
        term2
    | (TVTop, TVTop) ->
        term1

    | (_, _) ->
        assert false

  let lub leaf_glb leaf_lub term1 term2 =
    match (term1, term2) with

    | (TBottom, TBottom) ->
        term2
    | (TBottom, TTop) ->
        term2
    | (TBottom, TArrow (domain2, range2)) ->
        term2
    | (TBottom, TPair (left2, right2)) ->
        term2
    | (TBottom, TRef (read2, write2)) ->
        term2
    | (TBottom, TVect (read2, write2)) ->
        term2
    | (TBottom, TRecord (field2)) ->
        term2
    | (TBottom, TVariant (summand2)) ->
        term2
    | (TBottom, TInt) ->
        term2
    | (TBottom, TUnit) ->
        term2
    | (TBottom, TBool) ->
        term2
    | (TBottom, TFloat) ->
        term2
    | (TBottom, TChar) ->
        term2
    | (TBottom, TString) ->
        term2
    | (TTop, TBottom) ->
        term1
    | (TTop, TTop) ->
        term2
    | (TTop, TArrow (domain2, range2)) ->
        term1
    | (TTop, TPair (left2, right2)) ->
        term1
    | (TTop, TRef (read2, write2)) ->
        term1
    | (TTop, TVect (read2, write2)) ->
        term1
    | (TTop, TRecord (field2)) ->
        term1
    | (TTop, TVariant (summand2)) ->
        term1
    | (TTop, TInt) ->
        term1
    | (TTop, TUnit) ->
        term1
    | (TTop, TBool) ->
        term1
    | (TTop, TFloat) ->
        term1
    | (TTop, TChar) ->
        term1
    | (TTop, TString) ->
        term1
    | (TArrow (domain1, range1), TBottom) ->
        term1
    | (TArrow (domain1, range1), TTop) ->
        term2
    | (TArrow (domain1, range1), TArrow (domain2, range2)) ->
        TArrow (leaf_glb domain1 domain2, leaf_lub range1 range2)
    | (TArrow (domain1, range1), TPair (left2, right2)) ->
        TTop
    | (TArrow (domain1, range1), TRef (read2, write2)) ->
        TTop
    | (TArrow (domain1, range1), TVect (read2, write2)) ->
        TTop
    | (TArrow (domain1, range1), TRecord (field2)) ->
        TTop
    | (TArrow (domain1, range1), TVariant (summand2)) ->
        TTop
    | (TArrow (domain1, range1), TInt) ->
        TTop
    | (TArrow (domain1, range1), TUnit) ->
        TTop
    | (TArrow (domain1, range1), TBool) ->
        TTop
    | (TArrow (domain1, range1), TFloat) ->
        TTop
    | (TArrow (domain1, range1), TChar) ->
        TTop
    | (TArrow (domain1, range1), TString) ->
        TTop
    | (TPair (left1, right1), TBottom) ->
        term1
    | (TPair (left1, right1), TTop) ->
        term2
    | (TPair (left1, right1), TArrow (domain2, range2)) ->
        TTop
    | (TPair (left1, right1), TPair (left2, right2)) ->
        TPair (leaf_lub left1 left2, leaf_lub right1 right2)
    | (TPair (left1, right1), TRef (read2, write2)) ->
        TTop
    | (TPair (left1, right1), TVect (read2, write2)) ->
        TTop
    | (TPair (left1, right1), TRecord (field2)) ->
        TTop
    | (TPair (left1, right1), TVariant (summand2)) ->
        TTop
    | (TPair (left1, right1), TInt) ->
        TTop
    | (TPair (left1, right1), TUnit) ->
        TTop
    | (TPair (left1, right1), TBool) ->
        TTop
    | (TPair (left1, right1), TFloat) ->
        TTop
    | (TPair (left1, right1), TChar) ->
        TTop
    | (TPair (left1, right1), TString) ->
        TTop
    | (TRef (read1, write1), TBottom) ->
        term1
    | (TRef (read1, write1), TTop) ->
        term2
    | (TRef (read1, write1), TArrow (domain2, range2)) ->
        TTop
    | (TRef (read1, write1), TPair (left2, right2)) ->
        TTop
    | (TRef (read1, write1), TRef (read2, write2)) ->
        TRef (leaf_lub read1 read2, leaf_glb write1 write2)
    | (TRef (read1, write1), TVect (read2, write2)) ->
        TTop
    | (TRef (read1, write1), TRecord (field2)) ->
        TTop
    | (TRef (read1, write1), TVariant (summand2)) ->
        TTop
    | (TRef (read1, write1), TInt) ->
        TTop
    | (TRef (read1, write1), TUnit) ->
        TTop
    | (TRef (read1, write1), TBool) ->
        TTop
    | (TRef (read1, write1), TFloat) ->
        TTop
    | (TRef (read1, write1), TChar) ->
        TTop
    | (TRef (read1, write1), TString) ->
        TTop
    | (TVect (read1, write1), TBottom) ->
        term1
    | (TVect (read1, write1), TTop) ->
        term2
    | (TVect (read1, write1), TArrow (domain2, range2)) ->
        TTop
    | (TVect (read1, write1), TPair (left2, right2)) ->
        TTop
    | (TVect (read1, write1), TRef (read2, write2)) ->
        TTop
    | (TVect (read1, write1), TVect (read2, write2)) ->
        TVect (leaf_lub read1 read2, leaf_glb write1 write2)
    | (TVect (read1, write1), TRecord (field2)) ->
        TTop
    | (TVect (read1, write1), TVariant (summand2)) ->
        TTop
    | (TVect (read1, write1), TInt) ->
        TTop
    | (TVect (read1, write1), TUnit) ->
        TTop
    | (TVect (read1, write1), TBool) ->
        TTop
    | (TVect (read1, write1), TFloat) ->
        TTop
    | (TVect (read1, write1), TChar) ->
        TTop
    | (TVect (read1, write1), TString) ->
        TTop
    | (TRecord (field1), TBottom) ->
        term1
    | (TRecord (field1), TTop) ->
        term2
    | (TRecord (field1), TArrow (domain2, range2)) ->
        TTop
    | (TRecord (field1), TPair (left2, right2)) ->
        TTop
    | (TRecord (field1), TRef (read2, write2)) ->
        TTop
    | (TRecord (field1), TVect (read2, write2)) ->
        TTop
    | (TRecord (field1), TRecord (field2)) ->
        TRecord (leaf_lub field1 field2)
    | (TRecord (field1), TVariant (summand2)) ->
        TTop
    | (TRecord (field1), TInt) ->
        TTop
    | (TRecord (field1), TUnit) ->
        TTop
    | (TRecord (field1), TBool) ->
        TTop
    | (TRecord (field1), TFloat) ->
        TTop
    | (TRecord (field1), TChar) ->
        TTop
    | (TRecord (field1), TString) ->
        TTop
    | (TVariant (summand1), TBottom) ->
        term1
    | (TVariant (summand1), TTop) ->
        term2
    | (TVariant (summand1), TArrow (domain2, range2)) ->
        TTop
    | (TVariant (summand1), TPair (left2, right2)) ->
        TTop
    | (TVariant (summand1), TRef (read2, write2)) ->
        TTop
    | (TVariant (summand1), TVect (read2, write2)) ->
        TTop
    | (TVariant (summand1), TRecord (field2)) ->
        TTop
    | (TVariant (summand1), TVariant (summand2)) ->
        TVariant (leaf_lub summand1 summand2)
    | (TVariant (summand1), TInt) ->
        TTop
    | (TVariant (summand1), TUnit) ->
        TTop
    | (TVariant (summand1), TBool) ->
        TTop
    | (TVariant (summand1), TFloat) ->
        TTop
    | (TVariant (summand1), TChar) ->
        TTop
    | (TVariant (summand1), TString) ->
        TTop
    | (TInt, TBottom) ->
        term1
    | (TInt, TTop) ->
        term2
    | (TInt, TArrow (domain2, range2)) ->
        TTop
    | (TInt, TPair (left2, right2)) ->
        TTop
    | (TInt, TRef (read2, write2)) ->
        TTop
    | (TInt, TVect (read2, write2)) ->
        TTop
    | (TInt, TRecord (field2)) ->
        TTop
    | (TInt, TVariant (summand2)) ->
        TTop
    | (TInt, TInt) ->
        term2
    | (TInt, TUnit) ->
        TTop
    | (TInt, TBool) ->
        TTop
    | (TInt, TFloat) ->
        TTop
    | (TInt, TChar) ->
        TTop
    | (TInt, TString) ->
        TTop
    | (TUnit, TBottom) ->
        term1
    | (TUnit, TTop) ->
        term2
    | (TUnit, TArrow (domain2, range2)) ->
        TTop
    | (TUnit, TPair (left2, right2)) ->
        TTop
    | (TUnit, TRef (read2, write2)) ->
        TTop
    | (TUnit, TVect (read2, write2)) ->
        TTop
    | (TUnit, TRecord (field2)) ->
        TTop
    | (TUnit, TVariant (summand2)) ->
        TTop
    | (TUnit, TInt) ->
        TTop
    | (TUnit, TUnit) ->
        term2
    | (TUnit, TBool) ->
        TTop
    | (TUnit, TFloat) ->
        TTop
    | (TUnit, TChar) ->
        TTop
    | (TUnit, TString) ->
        TTop
    | (TBool, TBottom) ->
        term1
    | (TBool, TTop) ->
        term2
    | (TBool, TArrow (domain2, range2)) ->
        TTop
    | (TBool, TPair (left2, right2)) ->
        TTop
    | (TBool, TRef (read2, write2)) ->
        TTop
    | (TBool, TVect (read2, write2)) ->
        TTop
    | (TBool, TRecord (field2)) ->
        TTop
    | (TBool, TVariant (summand2)) ->
        TTop
    | (TBool, TInt) ->
        TTop
    | (TBool, TUnit) ->
        TTop
    | (TBool, TBool) ->
        term2
    | (TBool, TFloat) ->
        TTop
    | (TBool, TChar) ->
        TTop
    | (TBool, TString) ->
        TTop
    | (TFloat, TBottom) ->
        term1
    | (TFloat, TTop) ->
        term2
    | (TFloat, TArrow (domain2, range2)) ->
        TTop
    | (TFloat, TPair (left2, right2)) ->
        TTop
    | (TFloat, TRef (read2, write2)) ->
        TTop
    | (TFloat, TVect (read2, write2)) ->
        TTop
    | (TFloat, TRecord (field2)) ->
        TTop
    | (TFloat, TVariant (summand2)) ->
        TTop
    | (TFloat, TInt) ->
        TTop
    | (TFloat, TUnit) ->
        TTop
    | (TFloat, TBool) ->
        TTop
    | (TFloat, TFloat) ->
        term2
    | (TFloat, TChar) ->
        TTop
    | (TFloat, TString) ->
        TTop
    | (TChar, TBottom) ->
        term1
    | (TChar, TTop) ->
        term2
    | (TChar, TArrow (domain2, range2)) ->
        TTop
    | (TChar, TPair (left2, right2)) ->
        TTop
    | (TChar, TRef (read2, write2)) ->
        TTop
    | (TChar, TVect (read2, write2)) ->
        TTop
    | (TChar, TRecord (field2)) ->
        TTop
    | (TChar, TVariant (summand2)) ->
        TTop
    | (TChar, TInt) ->
        TTop
    | (TChar, TUnit) ->
        TTop
    | (TChar, TBool) ->
        TTop
    | (TChar, TFloat) ->
        TTop
    | (TChar, TChar) ->
        term2
    | (TChar, TString) ->
        TTop
    | (TString, TBottom) ->
        term1
    | (TString, TTop) ->
        term2
    | (TString, TArrow (domain2, range2)) ->
        TTop
    | (TString, TPair (left2, right2)) ->
        TTop
    | (TString, TRef (read2, write2)) ->
        TTop
    | (TString, TVect (read2, write2)) ->
        TTop
    | (TString, TRecord (field2)) ->
        TTop
    | (TString, TVariant (summand2)) ->
        TTop
    | (TString, TInt) ->
        TTop
    | (TString, TUnit) ->
        TTop
    | (TString, TBool) ->
        TTop
    | (TString, TFloat) ->
        TTop
    | (TString, TChar) ->
        TTop
    | (TString, TString) ->
        term2

    | (TRBottom, TRBottom) ->
        term2
    | (TRBottom, TRAbsent) ->
        term2
    | (TRBottom, TRPresent (contents2)) ->
        term2
    | (TRBottom, TREither (contents2)) ->
        term2
    | (TRBottom, TRTop) ->
        term2
    | (TRAbsent, TRBottom) ->
        term1
    | (TRAbsent, TRAbsent) ->
        term2
    | (TRAbsent, TRPresent (contents2)) ->
        TREither (contents2)
    | (TRAbsent, TREither (contents2)) ->
        term2
    | (TRAbsent, TRTop) ->
        term2
    | (TRPresent (contents1), TRBottom) ->
        term1
    | (TRPresent (contents1), TRAbsent) ->
        TREither (contents1)
    | (TRPresent (contents1), TRPresent (contents2)) ->
        TRPresent (leaf_lub contents1 contents2)
    | (TRPresent (contents1), TREither (contents2)) ->
        TREither (leaf_lub contents1 contents2)
    | (TRPresent (contents1), TRTop) ->
        term2
    | (TREither (contents1), TRBottom) ->
        term1
    | (TREither (contents1), TRAbsent) ->
        term1
    | (TREither (contents1), TRPresent (contents2)) ->
        TREither (leaf_lub contents1 contents2)
    | (TREither (contents1), TREither (contents2)) ->
        TREither (leaf_lub contents1 contents2)
    | (TREither (contents1), TRTop) ->
        term2
    | (TRTop, TRBottom) ->
        term1
    | (TRTop, TRAbsent) ->
        term1
    | (TRTop, TRPresent (contents2)) ->
        term1
    | (TRTop, TREither (contents2)) ->
        term1
    | (TRTop, TRTop) ->
        term2

    | (TVAbsent, TVAbsent) ->
        term2
    | (TVAbsent, TVPresent (argument2)) ->
        term2
    | (TVAbsent, TVTop) ->
        term2
    | (TVPresent (argument1), TVAbsent) ->
        term1
    | (TVPresent (argument1), TVPresent (argument2)) ->
        TVPresent (leaf_lub argument1 argument2)
    | (TVPresent (argument1), TVTop) ->
        term2
    | (TVTop, TVAbsent) ->
        term1
    | (TVTop, TVPresent (argument2)) ->
        term1
    | (TVTop, TVTop) ->
        term2

    | (_, _) ->
        assert false

  let expands = function
    | TBottom ->
        false
    | TTop ->
        false
    | TArrow _ ->
        true
    | TPair _ ->
        true
    | TRef _ ->
        true
    | TVect _ ->
        true
    | TRecord _ ->
        false
    | TVariant _ ->
        false
    | TInt ->
        false
    | TUnit ->
        false
    | TBool ->
        false
    | TFloat ->
        false
    | TChar ->
        false
    | TString ->
        false
    | TRBottom ->
        false
    | TRAbsent ->
        false
    | TRPresent _ ->
        true
    | TREither _ ->
        true
    | TRTop ->
        false
    | TVAbsent ->
        false
    | TVPresent _ ->
        true
    | TVTop ->
        false

end

module Symbol = struct

  type t =

    | HBottom
    | HTop
    | HArrow
    | HPair
    | HRef
    | HVect
    | HRecord
    | HVariant
    | HInt
    | HUnit
    | HBool
    | HFloat
    | HChar
    | HString

    | HRBottom
    | HRAbsent
    | HRPresent
    | HREither
    | HRTop

    | HVAbsent
    | HVPresent
    | HVTop

  open Term

  let of_term = function
    | TBottom ->
        HBottom
    | TTop ->
        HTop
    | TArrow _ ->
        HArrow
    | TPair _ ->
        HPair
    | TRef _ ->
        HRef
    | TVect _ ->
        HVect
    | TRecord _ ->
        HRecord
    | TVariant _ ->
        HVariant
    | TInt ->
        HInt
    | TUnit ->
        HUnit
    | TBool ->
        HBool
    | TFloat ->
        HFloat
    | TChar ->
        HChar
    | TString ->
        HString
    | TRBottom ->
        HRBottom
    | TRAbsent ->
        HRAbsent
    | TRPresent _ ->
        HRPresent
    | TREither _ ->
        HREither
    | TRTop ->
        HRTop
    | TVAbsent ->
        HVAbsent
    | TVPresent _ ->
        HVPresent
    | TVTop ->
        HVTop

  let ordered symbol term =
    match (symbol, term) with

    | (HBottom, TBottom)
    | (HBottom, TTop)
    | (HBottom, TArrow _)
    | (HBottom, TPair _)
    | (HBottom, TRef _)
    | (HBottom, TVect _)
    | (HBottom, TRecord _)
    | (HBottom, TVariant _)
    | (HBottom, TInt)
    | (HBottom, TUnit)
    | (HBottom, TBool)
    | (HBottom, TFloat)
    | (HBottom, TChar)
    | (HBottom, TString)
    | (HTop, TTop)
    | (HArrow, TTop)
    | (HArrow, TArrow _)
    | (HPair, TTop)
    | (HPair, TPair _)
    | (HRef, TTop)
    | (HRef, TRef _)
    | (HVect, TTop)
    | (HVect, TVect _)
    | (HRecord, TTop)
    | (HRecord, TRecord _)
    | (HVariant, TTop)
    | (HVariant, TVariant _)
    | (HInt, TTop)
    | (HInt, TInt)
    | (HUnit, TTop)
    | (HUnit, TUnit)
    | (HBool, TTop)
    | (HBool, TBool)
    | (HFloat, TTop)
    | (HFloat, TFloat)
    | (HChar, TTop)
    | (HChar, TChar)
    | (HString, TTop)
    | (HString, TString)
    -> true
    | (HTop, TBottom)
    | (HTop, TArrow _)
    | (HTop, TPair _)
    | (HTop, TRef _)
    | (HTop, TVect _)
    | (HTop, TRecord _)
    | (HTop, TVariant _)
    | (HTop, TInt)
    | (HTop, TUnit)
    | (HTop, TBool)
    | (HTop, TFloat)
    | (HTop, TChar)
    | (HTop, TString)
    | (HArrow, TBottom)
    | (HArrow, TPair _)
    | (HArrow, TRef _)
    | (HArrow, TVect _)
    | (HArrow, TRecord _)
    | (HArrow, TVariant _)
    | (HArrow, TInt)
    | (HArrow, TUnit)
    | (HArrow, TBool)
    | (HArrow, TFloat)
    | (HArrow, TChar)
    | (HArrow, TString)
    | (HPair, TBottom)
    | (HPair, TArrow _)
    | (HPair, TRef _)
    | (HPair, TVect _)
    | (HPair, TRecord _)
    | (HPair, TVariant _)
    | (HPair, TInt)
    | (HPair, TUnit)
    | (HPair, TBool)
    | (HPair, TFloat)
    | (HPair, TChar)
    | (HPair, TString)
    | (HRef, TBottom)
    | (HRef, TArrow _)
    | (HRef, TPair _)
    | (HRef, TVect _)
    | (HRef, TRecord _)
    | (HRef, TVariant _)
    | (HRef, TInt)
    | (HRef, TUnit)
    | (HRef, TBool)
    | (HRef, TFloat)
    | (HRef, TChar)
    | (HRef, TString)
    | (HVect, TBottom)
    | (HVect, TArrow _)
    | (HVect, TPair _)
    | (HVect, TRef _)
    | (HVect, TRecord _)
    | (HVect, TVariant _)
    | (HVect, TInt)
    | (HVect, TUnit)
    | (HVect, TBool)
    | (HVect, TFloat)
    | (HVect, TChar)
    | (HVect, TString)
    | (HRecord, TBottom)
    | (HRecord, TArrow _)
    | (HRecord, TPair _)
    | (HRecord, TRef _)
    | (HRecord, TVect _)
    | (HRecord, TVariant _)
    | (HRecord, TInt)
    | (HRecord, TUnit)
    | (HRecord, TBool)
    | (HRecord, TFloat)
    | (HRecord, TChar)
    | (HRecord, TString)
    | (HVariant, TBottom)
    | (HVariant, TArrow _)
    | (HVariant, TPair _)
    | (HVariant, TRef _)
    | (HVariant, TVect _)
    | (HVariant, TRecord _)
    | (HVariant, TInt)
    | (HVariant, TUnit)
    | (HVariant, TBool)
    | (HVariant, TFloat)
    | (HVariant, TChar)
    | (HVariant, TString)
    | (HInt, TBottom)
    | (HInt, TArrow _)
    | (HInt, TPair _)
    | (HInt, TRef _)
    | (HInt, TVect _)
    | (HInt, TRecord _)
    | (HInt, TVariant _)
    | (HInt, TUnit)
    | (HInt, TBool)
    | (HInt, TFloat)
    | (HInt, TChar)
    | (HInt, TString)
    | (HUnit, TBottom)
    | (HUnit, TArrow _)
    | (HUnit, TPair _)
    | (HUnit, TRef _)
    | (HUnit, TVect _)
    | (HUnit, TRecord _)
    | (HUnit, TVariant _)
    | (HUnit, TInt)
    | (HUnit, TBool)
    | (HUnit, TFloat)
    | (HUnit, TChar)
    | (HUnit, TString)
    | (HBool, TBottom)
    | (HBool, TArrow _)
    | (HBool, TPair _)
    | (HBool, TRef _)
    | (HBool, TVect _)
    | (HBool, TRecord _)
    | (HBool, TVariant _)
    | (HBool, TInt)
    | (HBool, TUnit)
    | (HBool, TFloat)
    | (HBool, TChar)
    | (HBool, TString)
    | (HFloat, TBottom)
    | (HFloat, TArrow _)
    | (HFloat, TPair _)
    | (HFloat, TRef _)
    | (HFloat, TVect _)
    | (HFloat, TRecord _)
    | (HFloat, TVariant _)
    | (HFloat, TInt)
    | (HFloat, TUnit)
    | (HFloat, TBool)
    | (HFloat, TChar)
    | (HFloat, TString)
    | (HChar, TBottom)
    | (HChar, TArrow _)
    | (HChar, TPair _)
    | (HChar, TRef _)
    | (HChar, TVect _)
    | (HChar, TRecord _)
    | (HChar, TVariant _)
    | (HChar, TInt)
    | (HChar, TUnit)
    | (HChar, TBool)
    | (HChar, TFloat)
    | (HChar, TString)
    | (HString, TBottom)
    | (HString, TArrow _)
    | (HString, TPair _)
    | (HString, TRef _)
    | (HString, TVect _)
    | (HString, TRecord _)
    | (HString, TVariant _)
    | (HString, TInt)
    | (HString, TUnit)
    | (HString, TBool)
    | (HString, TFloat)
    | (HString, TChar)
    -> false

    | (HRBottom, TRBottom)
    | (HRBottom, TRAbsent)
    | (HRBottom, TRPresent _)
    | (HRBottom, TREither _)
    | (HRBottom, TRTop)
    | (HRAbsent, TRAbsent)
    | (HRAbsent, TREither _)
    | (HRAbsent, TRTop)
    | (HRPresent, TRPresent _)
    | (HRPresent, TREither _)
    | (HRPresent, TRTop)
    | (HREither, TREither _)
    | (HREither, TRTop)
    | (HRTop, TRTop)
    -> true
    | (HRAbsent, TRBottom)
    | (HRAbsent, TRPresent _)
    | (HRPresent, TRBottom)
    | (HRPresent, TRAbsent)
    | (HREither, TRBottom)
    | (HREither, TRAbsent)
    | (HREither, TRPresent _)
    | (HRTop, TRBottom)
    | (HRTop, TRAbsent)
    | (HRTop, TRPresent _)
    | (HRTop, TREither _)
    -> false

    | (HVAbsent, TVAbsent)
    | (HVAbsent, TVPresent _)
    | (HVAbsent, TVTop)
    | (HVPresent, TVPresent _)
    | (HVPresent, TVTop)
    | (HVTop, TVTop)
    -> true
    | (HVPresent, TVAbsent)
    | (HVTop, TVAbsent)
    | (HVTop, TVPresent _)
    -> false

    | (_, _) ->
        assert false

end

module Kind = struct

  type t =
    | KRegular
    | KRecord
    | KVariant

  open Term
  open Symbol

  let of_term = function
    | TBottom
    | TTop
    | TArrow _
    | TPair _
    | TRef _
    | TVect _
    | TRecord _
    | TVariant _
    | TInt
    | TUnit
    | TBool
    | TFloat
    | TChar
    | TString
    -> KRegular
    | TRBottom
    | TRAbsent
    | TRPresent _
    | TREither _
    | TRTop
    -> KRecord
    | TVAbsent
    | TVPresent _
    | TVTop
    -> KVariant

  let of_symbol = function
    | HBottom
    | HTop
    | HArrow
    | HPair
    | HRef
    | HVect
    | HRecord
    | HVariant
    | HInt
    | HUnit
    | HBool
    | HFloat
    | HChar
    | HString
    -> KRegular
    | HRBottom
    | HRAbsent
    | HRPresent
    | HREither
    | HRTop
    -> KRecord
    | HVAbsent
    | HVPresent
    | HVTop
    -> KVariant

  let bottom = function
    | KRegular
    -> TBottom
    | KRecord
    -> TRBottom
    | KVariant
    -> TVAbsent

  let top = function
    | KRegular
    -> TTop
    | KRecord
    -> TRTop
    | KVariant
    -> TVTop

  let iter action term =
    match term with
    | TBottom ->
        ()
    | TTop ->
        ()
    | TArrow (domain, range) ->
        action KRegular domain;
        action KRegular range
    | TPair (left, right) ->
        action KRegular left;
        action KRegular right
    | TRef (read, write) ->
        action KRegular read;
        action KRegular write
    | TVect (read, write) ->
        action KRegular read;
        action KRegular write
    | TRecord (field) ->
        action KRecord field
    | TVariant (summand) ->
        action KVariant summand
    | TInt ->
        ()
    | TUnit ->
        ()
    | TBool ->
        ()
    | TFloat ->
        ()
    | TChar ->
        ()
    | TString ->
        ()

    | TRBottom ->
        ()
    | TRAbsent ->
        ()
    | TRPresent (contents) ->
        action KRegular contents
    | TREither (contents) ->
        action KRegular contents
    | TRTop ->
        ()

    | TVAbsent ->
        ()
    | TVPresent (argument) ->
        action KRegular argument
    | TVTop ->
        ()

end

module Sort = struct

  open Term

  let iter action = function
    | TBottom ->
        ()
    | TTop ->
        ()
    | TArrow (domain, range) ->
        action false domain;
        action false range
    | TPair (left, right) ->
        action false left;
        action false right
    | TRef (read, write) ->
        action false read;
        action false write
    | TVect (read, write) ->
        action false read;
        action false write
    | TRecord (field) ->
        action true field
    | TVariant (summand) ->
        action true summand
    | TInt ->
        ()
    | TUnit ->
        ()
    | TBool ->
        ()
    | TFloat ->
        ()
    | TChar ->
        ()
    | TString ->
        ()

    | TRBottom ->
        ()
    | TRAbsent ->
        ()
    | TRPresent (contents) ->
        action false contents
    | TREither (contents) ->
        action false contents
    | TRTop ->
        ()

    | TVAbsent ->
        ()
    | TVPresent (argument) ->
        action false argument
    | TVTop ->
        ()

end

module Print = struct

  type token =
    | TokenArrow
    | TokenBool
    | TokenBottom
    | TokenChar
    | TokenComma
    | TokenFloat
    | TokenInt
    | TokenLBrace
    | TokenLBracket
    | TokenLParen
    | TokenRAbsent
    | TokenRBottom
    | TokenRBrace
    | TokenRBracket
    | TokenREither
    | TokenRParen
    | TokenRPresent
    | TokenRTop
    | TokenRecord
    | TokenRef
    | TokenSpacedArrow
    | TokenSpacedREither
    | TokenSpacedRPresent
    | TokenSpacedRef
    | TokenSpacedStar
    | TokenSpacedVPresent
    | TokenSpacedVect
    | TokenStar
    | TokenString
    | TokenTop
    | TokenUnit
    | TokenVAbsent
    | TokenVPresent
    | TokenVTop
    | TokenVariant
    | TokenVect

  open Term

  let priority = function
    | TBottom ->
        0
    | TTop ->
        1
    | TArrow _ ->
        13
    | TPair _ ->
        12
    | TRef _ ->
        11
    | TVect _ ->
        10
    | TRecord _ ->
        8
    | TVariant _ ->
        9
    | TInt ->
        2
    | TUnit ->
        3
    | TBool ->
        4
    | TFloat ->
        5
    | TChar ->
        6
    | TString ->
        7
    | TRBottom ->
        14
    | TRAbsent ->
        15
    | TRPresent _ ->
        17
    | TREither _ ->
        18
    | TRTop ->
        16
    | TVAbsent ->
        19
    | TVPresent _ ->
        20
    | TVTop ->
        21

  let term print_token is_row print_leaf term =
    match term with
    | TBottom ->
        print_token TokenBottom
    | TTop ->
        print_token TokenTop
    | TArrow (domain, range) ->
        print_leaf (fun term -> priority term >= 13) is_row domain;
        print_token TokenSpacedArrow;
        print_leaf (fun term -> priority term > 13) is_row range
    | TPair (left, right) ->
        print_leaf (fun term -> priority term >= 12) is_row left;
        print_token TokenSpacedStar;
        print_leaf (fun term -> priority term > 12) is_row right
    | TRef (read, write) ->
        print_token TokenLParen;
        print_leaf (fun term -> false) is_row write;
        print_token TokenComma;
        print_leaf (fun term -> false) is_row read;
        print_token TokenRParen;
        print_token TokenSpacedRef
    | TVect (read, write) ->
        print_token TokenLParen;
        print_leaf (fun term -> false) is_row write;
        print_token TokenComma;
        print_leaf (fun term -> false) is_row read;
        print_token TokenRParen;
        print_token TokenSpacedVect
    | TRecord (field) ->
        print_token TokenLBrace;
        print_leaf (fun term -> false) true field;
        print_token TokenRBrace
    | TVariant (summand) ->
        print_token TokenLBracket;
        print_leaf (fun term -> false) true summand;
        print_token TokenRBracket
    | TInt ->
        print_token TokenInt
    | TUnit ->
        print_token TokenUnit
    | TBool ->
        print_token TokenBool
    | TFloat ->
        print_token TokenFloat
    | TChar ->
        print_token TokenChar
    | TString ->
        print_token TokenString

    | TRBottom ->
        print_token TokenRBottom
    | TRAbsent ->
        print_token TokenRAbsent
    | TRPresent (contents) ->
        print_token TokenSpacedRPresent;
        print_leaf (fun term -> priority term > 17) is_row contents
    | TREither (contents) ->
        print_token TokenSpacedREither;
        print_leaf (fun term -> priority term > 18) is_row contents
    | TRTop ->
        print_token TokenRTop

    | TVAbsent ->
        print_token TokenVAbsent
    | TVPresent (argument) ->
        print_token TokenSpacedVPresent;
        print_leaf (fun term -> priority term > 20) is_row argument
    | TVTop ->
        print_token TokenVTop

  open Symbol

  let symbol print_token = function
    | HBottom ->
        print_token TokenBottom
    | HTop ->
        print_token TokenTop
    | HArrow ->
        print_token TokenArrow
    | HPair ->
        print_token TokenStar
    | HRef ->
        print_token TokenRef
    | HVect ->
        print_token TokenVect
    | HRecord ->
        print_token TokenRecord
    | HVariant ->
        print_token TokenVariant
    | HInt ->
        print_token TokenInt
    | HUnit ->
        print_token TokenUnit
    | HBool ->
        print_token TokenBool
    | HFloat ->
        print_token TokenFloat
    | HChar ->
        print_token TokenChar
    | HString ->
        print_token TokenString

    | HRBottom ->
        print_token TokenRBottom
    | HRAbsent ->
        print_token TokenRAbsent
    | HRPresent ->
        print_token TokenRPresent
    | HREither ->
        print_token TokenREither
    | HRTop ->
        print_token TokenRTop

    | HVAbsent ->
        print_token TokenVAbsent
    | HVPresent ->
        print_token TokenVPresent
    | HVTop ->
        print_token TokenVTop

end

module Abstract = struct

  type 'a expression = {
      actual: 'a actual_expression;
      mutable info: 'a option
    }

  and 'a actual_expression =
    | Variable of string
    | Term of ('a expression) Term.t
    | RowExtension of string * 'a expression * 'a expression
    | RowUniform of 'a expression

  type 'a coercion =
    | Coercion of 'a expression * 'a expression
    | Conditional of Symbol.t * 'a expression * 'a expression * 'a expression

end

